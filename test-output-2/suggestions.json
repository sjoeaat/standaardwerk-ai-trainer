{
  "pendingSuggestions": [
    {
      "originalLine": "3.2.1\tN10: Blockierung Einfuhrrinne FB130\t27",
      "lineNumber": 25,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "3.2.2\tN11: Blockierung Einfuhrrinne FB132\t28",
      "lineNumber": 26,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "3.2.3\tT10: Füllen Horde  FB134\t29",
      "lineNumber": 27,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "3.2.4\tT11: Füllen Horde  FB136\t31",
      "lineNumber": 28,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "3.2.5\tT10: Positionieren Einfuhrwagen  FB138\t33",
      "lineNumber": 29,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "3.2.6\tT10: Transport MT10D Einfuhrwagen  FB140\t35",
      "lineNumber": 30,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "3.2.7\tT10: Transportbahn T10A FB142\t37",
      "lineNumber": 31,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "3.2.8\tT10: Transportbahn T11A FB144\t39",
      "lineNumber": 32,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "3.2.9\tT10: Transportbahn Käse Anfuhr T10B FB146\t40",
      "lineNumber": 33,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "3.2.10\tT10: Transportbahn Käse Anfuhr T11B FB148\t43",
      "lineNumber": 34,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "3.2.11\tT10: Transportbahn Käse Abfuhr T10B FB150\t44",
      "lineNumber": 35,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "3.2.12\tT10: Transportbahn Käse Abfuhr T11B FB152\t44",
      "lineNumber": 36,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "3.2.13\tT10: Transportbahn positionieren T10C FB154\t45",
      "lineNumber": 37,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "3.2.14\tT10: Transportbahn positionieren T11C FB156\t47",
      "lineNumber": 38,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "4.2.1\tT40: Entleeren Horde Reihe für Reihe FB230\t61",
      "lineNumber": 51,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "4.2.2\tT40: Positionieren Haken T40 FB232\t68",
      "lineNumber": 52,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "4.2.3\tT40: Positionieren Ausfuhrwagen FB234\t70",
      "lineNumber": 53,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "4.2.4\tT40: Transport MT40D Ausfuhrwagen FB236\t72",
      "lineNumber": 54,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "4.2.5\tT40: Transportbahn T40A FB238\t74",
      "lineNumber": 55,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "4.2.6\tT40: Transportbahn T40B FB240\t76",
      "lineNumber": 56,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "5.1.5\tN21: Umschwimmen Horde nach N31 FB308\t82",
      "lineNumber": 65,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "5.1.6\tN22: Umschwimmen Horde nach N32 FB310\t85",
      "lineNumber": 66,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "5.1.7\tN23: Umschwimmen Horde nach N33 FB312\t85",
      "lineNumber": 67,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "5.1.8\tN24: Umschwimmen Horde nach N34 FB314\t85",
      "lineNumber": 68,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "11\tSalzbad 2.2: Horden 2N51/2N52/2N53\t112",
      "lineNumber": 101,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Lengte TAB voor STAP kleiner gemaakt (van 8 naar 6 cm)",
      "lineNumber": 118,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde vorselektiert (Selektionsprogramm Horde für Einfuhr SCHRITT 2+5+8+11)",
      "lineNumber": 141,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Füllen 1e Horde aktiv:",
      "lineNumber": 143,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Füllen Horde aktiv (Füllen Horde N21 SCHRITT 7)",
      "lineNumber": 144,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Füllen Horde aktiv (Füllen Horde N22 SCHRITT 7)",
      "lineNumber": 145,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Füllen Horde aktiv (Füllen Horde N23 SCHRITT 7)",
      "lineNumber": 146,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Füllen Horde aktiv (Füllen Horde N24 SCHRITT 7)",
      "lineNumber": 147,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 150,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Ende Produktion (K5 in Ruhe) (Komm. von K5)",
      "lineNumber": 151,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Strömung Einfuhrrinne N10/N11: Strömung Einfuhrrinne N10/N11 OK",
      "lineNumber": 153,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Käse am Blockierung der Einfuhrrinne N10 nicht erwartet (N10-202)",
      "lineNumber": 159,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Käse am Blockierung der Einfuhrrinne N11 nicht erwartet (N11-202)",
      "lineNumber": 160,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Blockierung geschlossen (N10: Blockierung Einfuhrrinne SCHRITT 3)",
      "lineNumber": 162,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Strömung Einfuhrrinne N10/N11: Strömung Einfuhrrinne N10/N11 OK",
      "lineNumber": 164,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Füllen fertig (Füllen Horde Reihe für Reihe RUHE)",
      "lineNumber": 167,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht aktiv (Füllen Horde N21 RUHE)",
      "lineNumber": 170,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht aktiv (Füllen Horde N22 RUHE)",
      "lineNumber": 171,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht aktiv (Füllen Horde N23 RUHE)",
      "lineNumber": 172,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht aktiv (Füllen Horde N24 RUHE)",
      "lineNumber": 173,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Freigabe Start Einfuhr =",
      "lineNumber": 175,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Nicht aktiv(Reinigung Einfuhrwagen)T10 RUHE",
      "lineNumber": 179,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht aktiv (Käsezähler Anfang T10B) RUHE",
      "lineNumber": 180,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht aktiv (Käsezähler Anfang T11B) RUHE",
      "lineNumber": 181,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht aktiv (Käsezähler Ende T10B) RUHE",
      "lineNumber": 182,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht aktiv (Käsezähler Ende T11B) RUHE",
      "lineNumber": 183,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht aktiv (T10: Füllen Horde Reihe für Reihe) RUHE",
      "lineNumber": 184,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Nicht aktiv (T10: Positionieren Einfuhrwagen) RUHE",
      "lineNumber": 185,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Nicht aktiv (T10:Transport MT10D Einfuhrwagen) RUHE",
      "lineNumber": 186,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Nicht aktiv (Füllen Horde N21 RUHE)",
      "lineNumber": 197,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht aktiv (Füllen Horde N22 RUHE)",
      "lineNumber": 198,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht aktiv (Füllen Horde N23 RUHE)",
      "lineNumber": 199,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht aktiv (Füllen Horde N24 RUHE)",
      "lineNumber": 200,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "T10: Positionieren Einfuhrwagen: Einfuhrwagen T10 vor Bad",
      "lineNumber": 201,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Vorselektierte Horde für 1e Befüllung OK =",
      "lineNumber": 204,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Selektionsprogramm Horden für Einfuhr: Vorselektierte Horde für 1e Befüllung = 0",
      "lineNumber": 205,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "nicht aktiv(Selektionsprogramm Horde für Einfuhr RUHE)",
      "lineNumber": 206,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 207,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Selektionsprogramm Horden für Einfuhr Vorselektierte Horde für 1e Befüllung = 21..24",
      "lineNumber": 208,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 211,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Überlegende Etagen leer =",
      "lineNumber": 215,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Pause Einfuhr =",
      "lineNumber": 217,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhr aktiv =",
      "lineNumber": 224,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Staumeldung Einfuhrrinne N10 =",
      "lineNumber": 227,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Strömung Einfuhrrinne N10/N11: Strömung Einfuhrrinne N10/N11 OK",
      "lineNumber": 229,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Strömung Einfuhrrinne N10/N11: Strömung Einfuhrrinne N10/N11 OK",
      "lineNumber": 233,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Staumeldung Einfuhrrinne N11 =",
      "lineNumber": 236,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Strömung Einfuhrrinne N10/N11: Strömung Einfuhrrinne N10/N11 OK",
      "lineNumber": 238,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Strömung Einfuhrrinne N10/N11 Strömung: Einfuhrrinne N10/N11 OK",
      "lineNumber": 242,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Vorgewählte Horde auf Automat =",
      "lineNumber": 245,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Selektionsprogramm Horden für Einfuhr Vorselektierte Horde für 1e Befüllung = 21",
      "lineNumber": 246,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 248,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Selektionsprogramm Horden für Einfuhr Vorselektierte Horde für 1e Befüllung = 22",
      "lineNumber": 249,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 251,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Selektionsprogramm Horden für Einfuhr Vorselektierte Horde für 1e Befüllung = 23",
      "lineNumber": 252,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 254,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Selektionsprogramm Horden für Einfuhr Vorselektierte Horde für 1e Befüllung = 24",
      "lineNumber": 255,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Vorselektierte Horde für 1e Befüllung ausgeschaltet =",
      "lineNumber": 257,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Vorselektierte Horde für 1e Befüllung].Status = 4",
      "lineNumber": 258,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Vorselektierte Horde für 1e Befüllung leer =",
      "lineNumber": 259,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Vorselektierte Horde für 1e Befüllung].Status = 0",
      "lineNumber": 260,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Vorselektierte Etage für 1e Befüllung leer =",
      "lineNumber": 261,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Vorselektierte Horde 1e Befüllung].Etage_Daten[Vorselektierte Etage 1e Befüllung].Reihe_Daten[1].Status = 0",
      "lineNumber": 262,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Vorselektierte Horde 1e Befüllung].Etage_Daten[Vorselektierte Etage 1e Befüllung].Reihe_Daten[2].Status = 0",
      "lineNumber": 263,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Vorselektierte Horde 1e Befüllung].Etage_Daten[Vorselektierte Etage 1e Befüllung].Reihe_Daten[3].Status = 0",
      "lineNumber": 264,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Vorselektierte Horde 1e Befüllung].Etage_Daten[Vorselektierte Etage 1e Befüllung].Reihe_Daten[4].Status = 0",
      "lineNumber": 265,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Vorselektierte Horde 1e Befüllung].Etage_Daten[Vorselektierte Etage 1e Befüllung].Reihe_Daten[5].Status = 0",
      "lineNumber": 266,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Vorselektierte Horde 1e Befüllung].Etage_Daten[Vorselektierte Etage 1e Befüllung].Reihe_Daten[6].Status = 0",
      "lineNumber": 267,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Meldung: Vorselektierte Horde/Etage für 1e Befüllung nicht OK =",
      "lineNumber": 268,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Vorselektierte Horde für 1e Befüllung = 0",
      "lineNumber": 274,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Einfuhr (Hauptprogramm Einfuhr SCHRITT 1)",
      "lineNumber": 275,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 276,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "NICHT Ausschalten Horde: Horde N21 ausgeschaltet",
      "lineNumber": 280,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 282,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Vorselektierte Horde für 1e Befüllung = 21",
      "lineNumber": 284,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Einfuhr (Hauptprogramm Einfuhr SCHRITT 1& NICHT RUHE)",
      "lineNumber": 285,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Start Füllen Horde N21 (Füllen Horde N21 SCHRITT 6)",
      "lineNumber": 287,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Füllen Horde N21 fast fertig (Füllen Horde N21 SCHRITT 8)",
      "lineNumber": 289,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ T10: Füllen Horde Reihe für Reihe Drucktaste nächste Horde bedient",
      "lineNumber": 290,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 291,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "NICHT Ausschalten Horde: Horde N22 ausgeschaltet",
      "lineNumber": 295,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 297,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Vorselektierte Horde für 1e Befüllung = 22",
      "lineNumber": 299,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Einfuhr (Hauptprogramm Einfuhr SCHRITT 1 & NICHT RUHE)",
      "lineNumber": 300,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Start Füllen Horde N22 (Füllen Horde N22 SCHRITT 6)",
      "lineNumber": 302,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Füllen Horde N22 fast fertig (Füllen Horde N22 SCHRITT 8)",
      "lineNumber": 304,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ T10: Füllen Horde Reihe für Reihe Drucktaste nächste Horde bedient",
      "lineNumber": 305,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 306,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "NICHT Ausschalten Horde: Horde N23 ausgeschaltet",
      "lineNumber": 310,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 312,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Vorselektierte Horde für 1e Befüllung = 23",
      "lineNumber": 314,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Einfuhr (Hauptprogramm Einfuhr SCHRITT 1 & NICHT RUHE)",
      "lineNumber": 315,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Start Füllen Horde N23 (Füllen Horde N23 SCHRITT 6)",
      "lineNumber": 317,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Füllen Horde N23 fast fertig (Füllen Horde N23 SCHRITT 8)",
      "lineNumber": 319,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ T10: Füllen Horde Reihe für Reihe Drucktaste nächste Horde bedient",
      "lineNumber": 320,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 321,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "NICHT Ausschalten Horde: Horde N24 ausgeschaltet",
      "lineNumber": 325,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 327,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Vorselektierte Horde für 1e Befüllung = 24",
      "lineNumber": 329,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Einfuhr (Hauptprogramm Einfuhr SCHRITT 1 & NICHT RUHE)",
      "lineNumber": 330,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Start Füllen Horde N24 (Füllen Horde N24 SCHRITT 6)",
      "lineNumber": 332,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Füllen Horde N24 fast fertig (Füllen Horde N24 SCHRITT 8)",
      "lineNumber": 334,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Füllen Horde Reihe für Reihe Drucktaste nächste Horde bedient",
      "lineNumber": 335,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 336,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Letzte Käse Einfuhr in Horde gebracht (Hauptprogramm Einfuhr SCHRITT 7)",
      "lineNumber": 341,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Variable 1 (Aktive Einfuhrhorde) =",
      "lineNumber": 345,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= 21",
      "lineNumber": 346,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N21 aktiv (SCHRITT 3)",
      "lineNumber": 347,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 22",
      "lineNumber": 348,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N22 aktiv (SCHRITT 6)",
      "lineNumber": 349,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 23",
      "lineNumber": 350,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N23 aktiv (SCHRITT 9)",
      "lineNumber": 351,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 24",
      "lineNumber": 352,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N24 aktiv (SCHRITT 12)",
      "lineNumber": 353,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 0",
      "lineNumber": 354,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ende Einfuhr (Hauptprogramm Einfuhr SCHRITT 8)",
      "lineNumber": 355,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Letzte_gefüllte_Etage (Letzte gefüllte Etage von aktive Horde) =",
      "lineNumber": 356,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= \"N21 Hordedaten\".Horde_Daten.Letzte_aktive_Etage",
      "lineNumber": 357,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 1 (Aktive Einfuhrhorde) = 21",
      "lineNumber": 358,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= \"N22 Hordedaten\".Horde_Daten.Letzte_aktive_Etage",
      "lineNumber": 359,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 1 (Aktive Einfuhrhorde) = 22",
      "lineNumber": 360,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= \"N23 Hordedaten\".Horde_Daten.Letzte_aktive_Etage",
      "lineNumber": 361,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 1 (Aktive Einfuhrhorde) = 23",
      "lineNumber": 362,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= \"N24 Hordedaten\".Horde_Daten.Letzte_aktive_Etage",
      "lineNumber": 363,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 1 (Aktive Einfuhrhorde) = 24",
      "lineNumber": 364,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 2 (Vorselektierte Horde für 1e Befüllung) =",
      "lineNumber": 365,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Aktive Einfuhrhorde",
      "lineNumber": 366,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Aktive Einfuhrhorde + 1",
      "lineNumber": 370,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Aktive Einfuhrhorde].Letzte gefüllte Etage = 20",
      "lineNumber": 372,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Einfuhr (Hauptprogramm Einfuhr RUHE & SCHRITT 1)",
      "lineNumber": 374,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "[ Aktive Einfuhrhorde = 21",
      "lineNumber": 375,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Umschwimmen aktiv (N21: Umschwimmen Horde nach N31 NICHT RUHE)",
      "lineNumber": 376,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 377,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Aktive Einfuhrhorde = 22",
      "lineNumber": 378,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Umschwimmen aktiv (N22: Umschwimmen Horde nach N32 NICHT RUHE)",
      "lineNumber": 379,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 380,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Aktive Einfuhrhorde = 23",
      "lineNumber": 381,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Umschwimmen aktiv (N23: Umschwimmen Horde nach N33 NICHT RUHE)",
      "lineNumber": 382,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 383,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Aktive Einfuhrhorde = 24",
      "lineNumber": 384,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Umschwimmen aktiv (N24: Umschwimmen Horde nach N34 NICHT RUHE) ]",
      "lineNumber": 385,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "= 21",
      "lineNumber": 386,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Vorselektierte Horde für 1e Befüllung < 21",
      "lineNumber": 388,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "= 0",
      "lineNumber": 390,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Produktion (Hauptprogramm Einfuhr SCHRITT 3)",
      "lineNumber": 392,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Variable 3 (Vorselektierte Etage für 1e Befüllung) =",
      "lineNumber": 393,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= [Aktive Einfuhrhorde].Letzte aktive Etage +1",
      "lineNumber": 394,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= 1",
      "lineNumber": 398,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Aktive Einfuhrhorde].Letzte gefüllte Etage = 20",
      "lineNumber": 401,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 402,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Hauptprogramm Einfuhr: Vorselektierte Horde für 1e Befüllung leer",
      "lineNumber": 403,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 404,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Start Einfuhr (Hauptprogramm Einfuhr RUHE & SCHRITT 1)",
      "lineNumber": 405,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "[ Aktive Einfuhrhorde = 21",
      "lineNumber": 406,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Umschwimmen aktiv (N21: Umschwimmen Horde nach N31 NICHT RUHE)",
      "lineNumber": 407,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 408,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Aktive Einfuhrhorde = 22",
      "lineNumber": 409,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Umschwimmen aktiv (N22: Umschwimmen Horde nach N32 NICHT RUHE)",
      "lineNumber": 410,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 411,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Aktive Einfuhrhorde = 23",
      "lineNumber": 412,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Umschwimmen aktiv (N23: Umschwimmen Horde nach N33 NICHT RUHE)",
      "lineNumber": 413,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 414,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Aktive Einfuhrhorde = 24",
      "lineNumber": 415,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Umschwimmen aktiv (N24: Umschwimmen Horde nach N34 NICHT RUHE) ]",
      "lineNumber": 416,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "= 0",
      "lineNumber": 417,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Produktion (Haupt Einfuhr SCHRITT 3)",
      "lineNumber": 419,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Variable 4 (Vorselektierte Horde) =",
      "lineNumber": 420,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Vorselektierte Horde für 1e Befüllung",
      "lineNumber": 421,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "1e Befüllung bei Aufstart:",
      "lineNumber": 422,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "[ Horde N21 vorselektiert (SCHRITT 2)",
      "lineNumber": 423,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Horde N22 vorselektiert (SCHRITT 5)",
      "lineNumber": 424,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N23 vorselektiert (SCHRITT 8)",
      "lineNumber": 425,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N24 vorselektiert (SCHRITT 11) ]",
      "lineNumber": 426,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Einfuhr NICHT aktiv (Hauptprogramm Einfuhr NICHT SCHRITT 3-5)",
      "lineNumber": 427,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 21",
      "lineNumber": 428,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N21 vorselektiert (SCHRITT 2)",
      "lineNumber": 429,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Einfuhr aktiv (Hauptprogramm Einfuhr SCHRITT 3-5)",
      "lineNumber": 430,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 22",
      "lineNumber": 431,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N22 vorselektiert (SCHRITT 5)",
      "lineNumber": 432,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Einfuhr aktiv (Hauptprogramm Einfuhr SCHRITT 3-5)",
      "lineNumber": 433,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 23",
      "lineNumber": 434,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N23 vorselektiert (SCHRITT 8)",
      "lineNumber": 435,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Einfuhr aktiv (Hauptprogramm Einfuhr SCHRITT 3-5)",
      "lineNumber": 436,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 24",
      "lineNumber": 437,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N24 vorselektiert (SCHRITT 11)",
      "lineNumber": 438,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Einfuhr aktiv (Hauptprogramm Einfuhr SCHRITT 3-5)",
      "lineNumber": 439,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Variable 5 (Erwünste Etage Für vorselektierte Horde)=",
      "lineNumber": 440,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Vorselektierte Etage  für 1e Befüllung",
      "lineNumber": 441,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "1e Befüllung bei Aufstart:",
      "lineNumber": 442,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "[ Horde N21 vorselektiert (SCHRITT 2)",
      "lineNumber": 443,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Horde N22 vorselektiert (SCHRITT 5)",
      "lineNumber": 444,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N23 vorselektiert (SCHRITT 8)",
      "lineNumber": 445,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N24 vorselektiert (SCHRITT 11) ]",
      "lineNumber": 446,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Einfuhr NICHT aktiv (Hauptprogramm Einfuhr NICHT SCHRITT 3-5)",
      "lineNumber": 447,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 1",
      "lineNumber": 448,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "[ Horde N21 vorselektiert (SCHRITT 2)",
      "lineNumber": 449,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Horde N22 vorselektiert (SCHRITT 5)",
      "lineNumber": 450,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N23 vorselektiert (SCHRITT 8)",
      "lineNumber": 451,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N24 vorselektiert (SCHRITT 11) ]",
      "lineNumber": 452,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Einfuhr aktiv (Hauptprogramm Einfuhr SCHRITT 3-5)",
      "lineNumber": 453,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "[ Horde N21 vorselektiert (SCHRITT 2)",
      "lineNumber": 457,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Horde N22 vorselektiert (SCHRITT 5)",
      "lineNumber": 458,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N23 vorselektiert (SCHRITT 8)",
      "lineNumber": 459,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N24 vorselektiert (SCHRITT 11) ]",
      "lineNumber": 460,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10_EinfuhrwagenNachReinigungspos",
      "lineNumber": 462,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT aktiv (T10: Positionieren Einfuhrwagen) RUHE",
      "lineNumber": 467,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Gestartet (T10: Positionieren Einfuhrwagen NICHT RUHE)",
      "lineNumber": 472,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Fertig (T10: Positionieren Einfuhrwagen RUHE)",
      "lineNumber": 474,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Einfuhrwagen = 55 (Reinigungsposition)",
      "lineNumber": 475,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Freigabe Einfuhrwagen nach Reinigungsposition =",
      "lineNumber": 477,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhr nicht aktiv (Hauptprogramm Einfuhr RUHE + SCHRITT 7-8)",
      "lineNumber": 478,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "NICHT Störung: Einfuhrbahn T10C oben erwartet (T10-206)",
      "lineNumber": 480,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Einfuhrbahn T10C nicht oben erwartet (T10-206)",
      "lineNumber": 481,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Einfuhrbahn T11C oben erwartet (T11-206)",
      "lineNumber": 482,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Einfuhrbahn T11C nicht oben erwartet (T11-206)",
      "lineNumber": 483,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Reinigung_T10",
      "lineNumber": 485,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Freigabe Reinigung T10 =",
      "lineNumber": 499,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhr nicht aktiv (Hauptprogramm Einfuhr RUHE + SCHRIT 7-8)",
      "lineNumber": 500,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Aktuelle Position Einfuhrwagen = 55 (Reinigungsposition)",
      "lineNumber": 501,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Kommunikation_nach_K5",
      "lineNumber": 506,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Einfuhr in Salzbad eingeschaltet N10 = (Kommunikation nach K5) =",
      "lineNumber": 507,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Aktiv (Hauptprogramm Einfuhr SCHRITT 3)",
      "lineNumber": 508,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Strömung Einfuhrrinne N10/N11: Strömung Einfuhrrinne N10/N11 OK",
      "lineNumber": 509,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Käse abführen (Sortentrennung N10 NICHT SCHRITT 1-4)",
      "lineNumber": 510,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Einfuhr in Salzbad eingeschaltet N11 = (Kommunikation nach K5) =",
      "lineNumber": 511,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Aktiv (Hauptprogramm Einfuhr SCHRITT 3)",
      "lineNumber": 512,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Strömung Einfuhrrinne N10/N11: Strömung Einfuhrrinne N10/N11 OK",
      "lineNumber": 513,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Käse abführen (Sortentrennung N11 NICHT SCHRITT 1-4)",
      "lineNumber": 514,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Staumeldung in Einfuhrrinne gibt frei = (Kommunikation nach K5) =",
      "lineNumber": 515,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Staumeldung in Einfuhrrinne gibt frei = (Kommunikation nach K5) =",
      "lineNumber": 518,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10_KäsezählerAnfang_T10B",
      "lineNumber": 522,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10_KäsezählerAnfang_T11B",
      "lineNumber": 533,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe: T10: Käsezähler Anfang T10B",
      "lineNumber": 534,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10_KäsezählerEnde_T10B",
      "lineNumber": 536,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10_Käsezähler_Ende_T11B",
      "lineNumber": 547,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe:  Käsezähler Ende T10B",
      "lineNumber": 548,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N10_Sortentrennung",
      "lineNumber": 550,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Produktion (Hauptprogramm Einfuhr SCHRITT 3)",
      "lineNumber": 552,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "[ Sortenwechsel N10 (Besonderheit = 2) (Komm. von K5)",
      "lineNumber": 553,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 554,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Strömung Einfuhrrinne N10/N11: Strömung Einfuhrrinne N10/N11 OK",
      "lineNumber": 557,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Käse am Blockierung der Einfuhrrinne N10 nicht erwartet (N10-202)",
      "lineNumber": 561,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Blockierung geschlossen (N10: Blockierung Einfuhrrinne SCHRITT 3)",
      "lineNumber": 563,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Warten für Käse (T10: Transportbahn T10A SCHRITT 3)",
      "lineNumber": 565,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Strömung Einfuhrrinne N10: Strömung Einfuhrrinne N10/N11 OK",
      "lineNumber": 566,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktiv (T10: Füllen Horde Reihe für Reihe SCHRITT 8)",
      "lineNumber": 568,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Blockierung geöffnet (N10_100_Blockierung Einfuhrrinne RUHE)",
      "lineNumber": 570,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Unterwegs nach neue (T10: Füllen Horde Reihe für Reihe SCHRITT 6)",
      "lineNumber": 572,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Sortenwechsel (Besonderheit = 0) (Komm. von K5)",
      "lineNumber": 574,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Käse am Blockierung der Einfuhrrinne N10 erwartet (N10-202) =",
      "lineNumber": 576,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Käse am Blockierung der Einfuhrrinne N10 nicht erwartet (N10-202) =",
      "lineNumber": 583,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Strömung Einfuhrrinne N10: Strömung Einfuhrrinne N10/N11 OK",
      "lineNumber": 587,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N11_Sortentrennung",
      "lineNumber": 593,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Füllen Horde N21 (Füllen Horde N21 SCHRITT 6)",
      "lineNumber": 598,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Start Füllen Horde N22 (Füllen Horde N22 SCHRITT 6)",
      "lineNumber": 599,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Start Füllen Horde N23 (Füllen Horde N23 SCHRITT 6)",
      "lineNumber": 600,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Start Füllen Horde N24 (Füllen Horde N24 SCHRITT 6)",
      "lineNumber": 601,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 602,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Einfuhrwagen T10 nicht gestartet (T10: Positionieren Einfuhrwagen RUHE + SCHRITT 1-2)",
      "lineNumber": 606,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Käse vor Horde Einfuhr nicht erwartet (T10-207)",
      "lineNumber": 608,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Einfuhrwagen schon gestartet (T10: Positionieren Einfuhrwagen NICHT RUHE)",
      "lineNumber": 614,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Einfuhrwagen T10 gestartet (T10: Positionieren Einfuhrwagen SCHRITT 4)",
      "lineNumber": 616,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 617,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Aktuelle Position Einfuhrwagen T10 = Erwünschte Position Einfuhrwagen T10",
      "lineNumber": 620,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhrwagen nicht gestartet (T10: Positionieren Einfuhrwagen RUHE)",
      "lineNumber": 621,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Füllen Horde N21: Füllen Horde gestartet",
      "lineNumber": 624,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Positionieren Horde N21 in RUHE (Horde N21: Heben/Senken RUHE)",
      "lineNumber": 625,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 627,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Füllen Horde N22: Füllen Horde gestartet",
      "lineNumber": 628,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Positionieren Horde N22 in RUHE (Horde N22: Heben/Senken RUHE)",
      "lineNumber": 629,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 631,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Füllen Horde N23: Füllen Horde gestartet",
      "lineNumber": 632,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Positionieren Horde N23 in RUHE (Horde N23: Heben/Senken RUHE)",
      "lineNumber": 633,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 635,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Füllen Horde N24: Füllen Horde gestartet",
      "lineNumber": 636,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Positionieren Horde N24 in RUHE (Horde N24: Heben/Senken RUHE)",
      "lineNumber": 637,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Füllen Horde N21: Füllen Horde gestartet",
      "lineNumber": 640,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Positionieren Horde N21 gestartet (Horde N21: Heben/Senken NICHT RUHE)",
      "lineNumber": 641,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 642,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Füllen Horde N22: Füllen Horde gestartet",
      "lineNumber": 643,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Positionieren Horde N22 gestartet (Horde N22: Heben/Senken NICHT RUHE)",
      "lineNumber": 644,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 645,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Füllen Horde N23: Füllen Horde gestartet",
      "lineNumber": 646,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Positionieren Horde N23 gestartet (Horde N23: Heben/Senken NICHT RUHE)",
      "lineNumber": 647,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 648,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Füllen Horde N24: Füllen Horde gestartet",
      "lineNumber": 649,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Positionieren Horde N24 gestartet (Horde N24: Heben/Senken NICHT RUHE)",
      "lineNumber": 650,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 651,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Füllen Horde N21: Füllen Horde gestartet",
      "lineNumber": 654,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Positionieren Horde N21 in RUHE (Horde N21: Heben/Senken RUHE)",
      "lineNumber": 655,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N21 == Erwünschte Position Horde N21",
      "lineNumber": 656,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 657,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Füllen Horde N22: Füllen Horde gestartet",
      "lineNumber": 658,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Positionieren Horde N22 in RUHE (Horde N22: Heben/Senken RUHE)",
      "lineNumber": 659,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N22 == Erwünschte Position Horde N22",
      "lineNumber": 660,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 661,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Füllen Horde N23: Füllen Horde gestartet",
      "lineNumber": 662,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Positionieren Horde N23 in RUHE (Horde N23: Heben/Senken RUHE)",
      "lineNumber": 663,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N23 == Erwünschte Position Horde N23",
      "lineNumber": 664,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 665,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Füllen Horde N24: Füllen Horde gestartet",
      "lineNumber": 666,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Positionieren Horde N24 in RUHE (Horde N24: Heben/Senken RUHE)",
      "lineNumber": 667,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N24 == Erwünschte Position Horde N24",
      "lineNumber": 668,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhrwagen nicht gestartet (T10: Positionieren Einfuhrwagen RUHE)",
      "lineNumber": 670,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Einfuhrwagen T10 = Erwünschte Position Einfuhrwagen T10",
      "lineNumber": 671,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Positionieren Horde N21 in RUHE (Horde N21: Heben/Senken RUHE)",
      "lineNumber": 674,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N21 = Erwünschte Position Horde N21",
      "lineNumber": 675,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 676,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N22 in RUHE (Horde N22: Heben/Senken RUHE)",
      "lineNumber": 678,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N22 = Erwünschte Position Horde N22",
      "lineNumber": 679,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 680,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N23 in RUHE (Horde N23: Heben/Senken RUHE)",
      "lineNumber": 682,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N23 = Erwünschte Position Horde N23",
      "lineNumber": 683,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 684,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N24 in RUHE (Horde N24: Heben/Senken RUHE)",
      "lineNumber": 686,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N24 = Erwünschte Position Horde N24 ]",
      "lineNumber": 687,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Füllen Reihe ist aktiv (T10: Füllen Horde SCHRITT 1)",
      "lineNumber": 689,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Füllen Reihe ist aktiv (T11: Füllen Horde SCHRITT 1)",
      "lineNumber": 690,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Füllen Reihe ist fertig (T10: Füllen Horde SCHRITT 4)",
      "lineNumber": 692,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Füllen Reihe ist fertig (T11: Füllen Horde SCHRITT 4)",
      "lineNumber": 693,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Einfuhr aktiv (Hauptprogramm Einfuhr SCHRITT 1-5)",
      "lineNumber": 697,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Erwünschte Etage >= 1",
      "lineNumber": 699,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Etage <= 20",
      "lineNumber": 700,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Reihen >= Pos 1 (Reihen 1, 4)",
      "lineNumber": 701,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Reihen <= Pos 3 (Reihen 3, 6)",
      "lineNumber": 702,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 708,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Ende Einfuhr (Hauptprogramm Einfuhr NICHT SCHRITT 2-5)",
      "lineNumber": 709,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nächste Horde nach dieser Reihe =",
      "lineNumber": 711,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Etage = 20",
      "lineNumber": 712,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Reihen = Pos 1 (Reihen 1 & 4)",
      "lineNumber": 713,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 714,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Erwünschte Etage = 20",
      "lineNumber": 715,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 717,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Nächste Etage nach dieser Reihe =",
      "lineNumber": 719,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Reihen = Pos 3 (Reihen 3 & 6)",
      "lineNumber": 720,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 722,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Erwünschte Reihen = Pos 1 (Reihen 1 & 4)",
      "lineNumber": 723,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 725,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Einfuhrwagen neu positionieren nach dieser Reihe =",
      "lineNumber": 727,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 731,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 735,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Drucktaste nächste Reihe bedient =",
      "lineNumber": 737,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Drucktaste nächste Etage bedient =",
      "lineNumber": 745,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Drucktaste nächste Horde bedient =",
      "lineNumber": 753,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 1 (Erwünschte Etage) =",
      "lineNumber": 761,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Selektionsprogramm Horden für Einfuhr Erwünschte Etage für vorselektierte Horde",
      "lineNumber": 762,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Bestimmen erste zu Füllen Etage (RUHE & SCHRITT 1)",
      "lineNumber": 763,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Selektionsprogramm Horden für Einfuhr: Erwünschte Etage für vorselektierte Horde > 0",
      "lineNumber": 764,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Selektionsprogramm Horden für Einfuhr: Erwünschte Etage für vorselektierte Horde < 21",
      "lineNumber": 765,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+1",
      "lineNumber": 766,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Neue Etage bestimmen (SCHRITT 9&10)",
      "lineNumber": 767,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 0",
      "lineNumber": 769,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Fertig (SCHRITT 12)",
      "lineNumber": 770,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Ungerade Etage =",
      "lineNumber": 771,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 2 (Erwünschte Reihen) =",
      "lineNumber": 773,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Pos 1 (Reihen 1 & 4)",
      "lineNumber": 774,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Bestimmen erste zu Füllen Reihe (RUHE & SCHRITT 1)",
      "lineNumber": 775,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 777,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Neue Reihe bestimmen (SCHRITT 9&10)",
      "lineNumber": 778,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= Pos 3 (Reihen 4 & 6)",
      "lineNumber": 781,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Bestimmen erste zu Füllen Reihe (RUHE & SCHRITT 1)",
      "lineNumber": 782,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 784,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Neue Reihe bestimmen (SCHRITT 9&10)",
      "lineNumber": 785,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+1",
      "lineNumber": 788,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Neue Reihe bestimmen (SCHRITT 9&10)",
      "lineNumber": 789,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "-1",
      "lineNumber": 793,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Neue Reihe bestimmen (SCHRITT 9&10)",
      "lineNumber": 794,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 0",
      "lineNumber": 798,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Fertig (SCHRITT 12)",
      "lineNumber": 799,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Käse in aktive Etage =",
      "lineNumber": 800,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Horde[aktive Einfuhrhorde].Etage_Daten[Erwünschte Etage].Reihe_Daten[2].Anzahl Käse > 0",
      "lineNumber": 802,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde[aktive Einfuhrhorde].Etage_Daten[Erwünschte Etage].Reihe_Daten[3].Anzahl Käse > 0",
      "lineNumber": 803,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde[aktive Einfuhrhorde].Etage_Daten[Erwünschte Etage].Reihe_Daten[4].Anzahl Käse > 0",
      "lineNumber": 804,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde[aktive Einfuhrhorde].Etage_Daten[Erwünschte Etage].Reihe_Daten[5].Anzahl Käse > 0",
      "lineNumber": 805,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde[aktive Einfuhrhorde].Etage_Daten[Erwünschte Etage].Reihe_Daten[6].Anzahl Käse > 0",
      "lineNumber": 806,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "N10: Blockierung Einfuhrrinne\tFB130",
      "lineNumber": 808,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N10_100_BlockierungEinfuhrrinne",
      "lineNumber": 809,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Letze Käse vorbei Blockierung (Sortentrennung SCHRITT 2)",
      "lineNumber": 811,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Keine Käse im N10 vorbei Blockierung (Sortentrennung SCHRITT 4)",
      "lineNumber": 820,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Start öffnen N10-100 (auto H) =",
      "lineNumber": 829,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start schließen N10-100 (auto L) =",
      "lineNumber": 831,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Einfuhrbahn T10C nicht unten erwartet (T10-205) =",
      "lineNumber": 833,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "N11: Blockierung Einfuhrrinne\tFB132",
      "lineNumber": 840,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N11_100_BlockierungEinfuhrrinne",
      "lineNumber": 841,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe N10: Blockierung Einfuhrrinne",
      "lineNumber": 842,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde \tFB134",
      "lineNumber": 843,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10_FüllenHorde",
      "lineNumber": 844,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Einfuhr aktiv (Hauptprogramm Einfuhr SCHRITT 2-5)",
      "lineNumber": 846,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Starten füllen Horde (Füllen Horde Reihe für Reihe SCHRITT 7)",
      "lineNumber": 848,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht aktiv (T10: Transport T10A SCHRITT 3)",
      "lineNumber": 849,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Warte auf Startsignal (T11: Füllen Horde SCHRITT 1)",
      "lineNumber": 850,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zähler 1 (Anzahl Käse vorbei Zahlpunkt Anfang T10B) >= 28",
      "lineNumber": 852,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Zeit 1.Q (Warte für Käse Vorbei)",
      "lineNumber": 853,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Drucktaste nächste Reihe bedient",
      "lineNumber": 854,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Drucktaste nächste Etage bedient",
      "lineNumber": 855,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Drucktaste nächste Horde bedient",
      "lineNumber": 856,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Ende Einfuhr (Hauptprogramm Einfuhr NICHT SCHRITT 2-5)",
      "lineNumber": 857,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Variable_1 (Anzahl Käse am T10B anwesend) <=  0",
      "lineNumber": 859,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Nächste reihe oder ende (Füllen Horde Reihe für Reihe SCHRITT 9)",
      "lineNumber": 863,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 864,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Von SCHRITT 1:",
      "lineNumber": 865,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Ende Einfuhr (Hauptprogramm Einfuhr NICHT SCHRITT 2-5)",
      "lineNumber": 866,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht starten füllen Horde (Füllen Horde Reihe für Reihe NICHT SCHRITT 7)",
      "lineNumber": 867,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Käse detektiert =",
      "lineNumber": 869,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Käse vorbei zahlpunkt Ende T10B (Käsezähler Ende T10B SCHRITT 1&2)",
      "lineNumber": 871,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Reihe füllen aktiv (T10: Füllen Horde SCHRITT 2-3)",
      "lineNumber": 872,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Pos Flank:  Käse für Horde beim Einfuhrwagen T10 (T10-207)",
      "lineNumber": 874,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit 1 (Warte für Käse Vorbei) =",
      "lineNumber": 875,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Wartet auf nächsten Auftrag (T11: Füllen Horde SCHRITT 4)",
      "lineNumber": 878,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Käse detektiert (Käsezähler Anfang T10B SCHRITT 1)",
      "lineNumber": 880,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "PT=",
      "lineNumber": 881,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Zeit 2 (Käse nicht detektiert für Horde) =",
      "lineNumber": 883,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "PT=",
      "lineNumber": 889,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Zahler 1 (Anzahl Käse vorbei Zahlpunkt Anfang T10B) =",
      "lineNumber": 891,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+1",
      "lineNumber": 892,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Käse Am Anfang T10B gezahlt (Käsezähler Anfang T10B SCHRITT 1&2)",
      "lineNumber": 893,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 0",
      "lineNumber": 894,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Zahler 2 (Anzahl Käse vorbei Zahlpunkt Ende T10B) =",
      "lineNumber": 897,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+1",
      "lineNumber": 898,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Käse am Ende T10B gezahlt (Käsezähler Ende T10B SCHRITT 1&2)",
      "lineNumber": 899,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 0",
      "lineNumber": 900,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable_1 (Anzahl Käse am T10B anwesend) =",
      "lineNumber": 903,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable_2 (Maximum Anzahl Käse auf T10B) =",
      "lineNumber": 906,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= 6",
      "lineNumber": 907,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Maximum Anzahl Käse auf T10B anwesend =",
      "lineNumber": 909,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable_1 (Anzahl Käse am T10B anwesend)  >=  Variable_2 (Maximum Anzahl Käse auf T10B)",
      "lineNumber": 910,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Käse für Horde beim Einfuhrwagen T10 erwartet (T10-207) =",
      "lineNumber": 911,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit 2.Q (Käse nicht detektiert für Horde)",
      "lineNumber": 913,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Störung: Käse für Horde beim Einfuhrwagen T10 nicht erwartet (T10-207) =",
      "lineNumber": 917,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T11: Füllen Horde \tFB136",
      "lineNumber": 924,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T11_FüllenHorde",
      "lineNumber": 925,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "siehe T10: Füllen Horde",
      "lineNumber": 926,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Positionieren Einfuhrwagen \tFB138",
      "lineNumber": 927,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10_PositionierenEinfuhrwagen",
      "lineNumber": 928,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start positionieren Einfuhrwagen (T10: Füllen Horde Reihe für Reihe SCHRITT 3)",
      "lineNumber": 930,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 931,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Start Einfuhrwagen nach Reinigungsposition (Einfuhrwagen nach Reinigungsposition SCHRITT 2)",
      "lineNumber": 932,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 933,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Zählen Käse in Reihe (T10: Füllen Horde Reihe für Reihe SCHRITT 8)",
      "lineNumber": 934,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Befüllung der Reihe nahezu fertig (T10: Füllen Horde SCHRITT 3-5)",
      "lineNumber": 935,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Befüllung der Reihe nahezu fertig (T11: Füllen Horde SCHRITT 3-5)",
      "lineNumber": 936,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde Reihe für Reihe: Einfuhrwagen neu positionieren nach dieser Reihe",
      "lineNumber": 937,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Bahn in der untersten Position (Ausfuhr bahn Heben T10C RUHE)",
      "lineNumber": 939,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Bahn in der untersten Position (Ausfuhr bahn Heben T11C RUHE)",
      "lineNumber": 940,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Einfuhrwagen auf Position (T10: Transport Einfuhrwagen T10D RUHE)",
      "lineNumber": 941,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start positionieren Einfuhrwagen (T10: Füllen Horde Reihe für Reihe SCHRITT 3)",
      "lineNumber": 947,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Einfuhrwagen nach Reinigungsposition (Einfuhrwagen nach Reinigungsposition SCHRITT 2)",
      "lineNumber": 948,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Bahn oben (Ausfuhr bahn Heben T10C SCHRITT 4)",
      "lineNumber": 952,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Bahn oben (Ausfuhr bahn Heben T11C SCHRITT 4)",
      "lineNumber": 953,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Einfuhrwagen gestartet (T10: Transport Einfuhrwagen NICHT RUHE)",
      "lineNumber": 957,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Einfuhrwagen fertig (T10: Transport Einfuhrwagen RUHE)",
      "lineNumber": 959,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Bahn in der untersten Position (Ausfuhr bahn Heben T10C RUHE)",
      "lineNumber": 961,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Bahn in der untersten Position (Ausfuhr bahn Heben T11C RUHE)",
      "lineNumber": 962,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 965,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Einfuhrwagen T10 vor Bad =",
      "lineNumber": 969,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhrwagen vor Horde N21 =",
      "lineNumber": 970,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhrwagen vor Horde N22 =",
      "lineNumber": 971,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhrwagen vor Horde N23 =",
      "lineNumber": 972,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhrwagen vor Horde N24 =",
      "lineNumber": 973,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "T10: Transport MT10D Einfuhrwagen \tFB140",
      "lineNumber": 974,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10_Transport_T10D",
      "lineNumber": 975,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Transport Einfuhrwagen T10 (T10: Positionieren Einfuhrwagen SCHRITT 5)",
      "lineNumber": 977,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Einfuhrwagen nach Reinigungsposition (Einfuhrwagen nach Reinigungsposition NICHT RUHE) ]",
      "lineNumber": 982,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1002,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Stopp Transport MT10D Einfuhrwagen T10 =",
      "lineNumber": 1006,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Einfuhrbahn T10C oben erwartet (T10-206)",
      "lineNumber": 1007,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: Einfuhrbahn T11C oben erwartet (T11-206)",
      "lineNumber": 1008,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1009,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: MT10A",
      "lineNumber": 1010,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: MT10B",
      "lineNumber": 1011,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: MT10C",
      "lineNumber": 1012,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: MT10D",
      "lineNumber": 1013,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1014,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: MT11A",
      "lineNumber": 1015,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: MT11B",
      "lineNumber": 1016,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: MT11C",
      "lineNumber": 1017,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: MT11D",
      "lineNumber": 1018,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1019,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung Laser (T10-900-GTP): Synchronfehler",
      "lineNumber": 1020,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung Laser (T10-900-GTP): Zu große Änderung Wert",
      "lineNumber": 1021,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung Laser (T10-900-GTP): Vorbei erwünschte Position",
      "lineNumber": 1022,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Sollwert OK =",
      "lineNumber": 1023,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Sollwert Position >= 1 (N21 pos 1 (reihe 1&4) )",
      "lineNumber": 1024,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Sollwert Position <= 12 (N24 pos 3 (reihe 3&6) )",
      "lineNumber": 1025,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1026,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Sollwert Position = 55 (Reinigungsposition)",
      "lineNumber": 1027,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 1 (Erwünschte Position Einfuhrwagen T10) =",
      "lineNumber": 1028,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= (Vorselektierte Horde für 1e Befüllung – 21)* 5 + Erwünschte Reihe",
      "lineNumber": 1029,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde Reihe für Reihe SCHRITT 1&2",
      "lineNumber": 1030,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "= (Aktive Einfuhrhorde – 21)* 5 + Erwünschte Reihe",
      "lineNumber": 1032,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde Reihe für Reihe SCHRITT 1&2",
      "lineNumber": 1033,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "= 55",
      "lineNumber": 1035,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "21 – 21 x 5 = Pos. 1\tHorde N21\tReihe 1",
      "lineNumber": 1038,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "23 – 21 x 5 = Pos. 11 Horde N23\tReihe 1",
      "lineNumber": 1039,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 2 (Sollwert Position [1..55]) =",
      "lineNumber": 1040,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Erwünschte Position Einfuhrwagen T10",
      "lineNumber": 1041,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Positionieren (RUHE&SCHRITT 1)",
      "lineNumber": 1042,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "T10: Transportbahn T10A\tFB142",
      "lineNumber": 1043,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10_TransportbahnT10A",
      "lineNumber": 1044,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Einfuhr aktiv (Hauptprogramm Einfuhr SCHRITT 2-5)",
      "lineNumber": 1046,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Warten auf Käse (T10: Füllen Horde SCHRITT 1)",
      "lineNumber": 1048,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1053,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Einfuhr aktiv (Hauptprogramm Einfuhr SCHRITT 2-5)",
      "lineNumber": 1059,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Kein Freigabe fur Käse Ubertragt (T10: Transportbahn Käse  anfuhr T10B NICHT SCHRITT 3)",
      "lineNumber": 1063,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ NICHT MT10B Bahn dreht",
      "lineNumber": 1064,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Nicht warten auf Käse (T10: Füllen Horde NICHT SCHRITT 2)",
      "lineNumber": 1065,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Freigabe fur Käse Ubertragt (T10: Transportbahn Käse anfuhr T10B SCHRITT 3)",
      "lineNumber": 1069,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Warten auf Käse (T10: Füllen Horde SCHRITT 1-2)",
      "lineNumber": 1071,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1072,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Freigabe fur Käse Ubertragt (T10: Transportbahn Käse anfuhr T10B SCHRITT 3)",
      "lineNumber": 1075,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Warten auf Käse (T10: Füllen Horde SCHRITT 2 & NICHT SCHRITT 3)",
      "lineNumber": 1077,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Einfuhr nicht aktiv (Hauptprogramm Einfuhr NICHT SCHRITT 2-5)",
      "lineNumber": 1087,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Störung: Käse am Ende Einfuhrbahn T10A erwartet (T10-202)=",
      "lineNumber": 1092,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Kein Käse am Ende Einfuhrbahn T10A nicht erwartet (T10-202) =",
      "lineNumber": 1100,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1105,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Einfuhr nicht aktiv (Hauptprogramm Einfuhr NICHT SCHRITT 2-5)",
      "lineNumber": 1107,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Störung: Einfuhrbahn T10A nicht in richtige Position (T10-200) =",
      "lineNumber": 1112,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1116,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Freigabe Start Transportbänder T10A,B,C (Reinigung Einfuhrwagen: SCHRITT 2)",
      "lineNumber": 1117,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Transportbahn T11A\tFB144",
      "lineNumber": 1122,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10_TransportbahnT11A",
      "lineNumber": 1123,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Transportbahn Käse Anfuhr T10B\tFB146",
      "lineNumber": 1124,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10_TransportbahnAnfuhr_T10B",
      "lineNumber": 1125,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Einfuhr aktiv (Hauptprogramm Einfuhr SCHRITT 2-5)",
      "lineNumber": 1127,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Warten auf Käse (T10: Füllen Horde SCHRITT 1)",
      "lineNumber": 1129,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1134,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Kase unterwegs von T10A (T10: Transportbahn T10A SCHRITT 7)",
      "lineNumber": 1138,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Käse detektiert am Anfang T10B (T10: Käsezähler Anfang T10B SCHRITT 1)",
      "lineNumber": 1140,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Käse am Anfang Einfuhrwagen T10B erwartet (T10-203)",
      "lineNumber": 1141,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Käse vorbei Detektion T10B (T10: Käsezähler Anfang T10B SCHRITT 2)",
      "lineNumber": 1143,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Käse am Anfang Einfuhrwagen T10B nicht erwartet (T10-203)",
      "lineNumber": 1144,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Reihe füllen nicht aktiv (T10: Füllen Horde NICHT SCHRITT 1-3)",
      "lineNumber": 1147,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1148,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Neues reihe/Horde selektiert (T10: Füllen Horde SCHRITT 1)",
      "lineNumber": 1149,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "[ Kein Käse anwesend auf ende T10A (T10: Transportbahn T10A NICHT SCHRITT 4-6)",
      "lineNumber": 1150,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+Kein Käse detektiert am Ende T10B (T10: Käsezähler Ende T10B NICHT RUHE)",
      "lineNumber": 1151,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+T10: Füllen Horde: Maximum Anzahl Käse auf T10B anwesend ]",
      "lineNumber": 1152,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Reihe füllen aktiv (T10: Füllen Horde SCHRITT 2-3)",
      "lineNumber": 1156,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1157,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Käse anwesend auf ende T10A (T10: Transportbahn T10A SCHRITT 6)",
      "lineNumber": 1158,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Neues reihe/Horde selektiert (T10: Füllen Horde SCHRITT 1)",
      "lineNumber": 1159,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Kein Käse detektiert am Ende T10B (T10: Käsezähler Ende T10B RUHE)",
      "lineNumber": 1160,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde: NICHT Maximum Anzahl Käse auf T10B anwesend",
      "lineNumber": 1161,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1162,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Reihe füllen aktiv (T10: Füllen Horde SCHRITT 2-3)",
      "lineNumber": 1165,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1166,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Neues reihe/Horde selektiert (T10: Füllen Horde SCHRITT 1)",
      "lineNumber": 1167,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Käse anwesend auf ende T10A (T10: Transportbahn T10A SCHRITT 4-6)",
      "lineNumber": 1168,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Kein Käse detektiert am Ende T10B (T10: Käsezähler Ende T10B RUHE)",
      "lineNumber": 1169,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde: NICHT Maximum Anzahl Käse auf T10B anwesend",
      "lineNumber": 1170,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Einfuhr nicht aktiv (Hauptprogramm Einfuhr NICHT SCHRITT 2-5)",
      "lineNumber": 1176,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Start Transportbahn T10B =",
      "lineNumber": 1180,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1182,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Freigabe Start Transportbänder T10 A,B,C (Reinigung Einfuhrwagen: SCHRITT 2)",
      "lineNumber": 1183,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Stopp Transportbahn T10B =",
      "lineNumber": 1184,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Käse am Ende Einfuhrwagen T10B erwartet (T10-204)",
      "lineNumber": 1185,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: Käse am Ende Einfuhrwagen T10B nicht erwartet (T10-204)",
      "lineNumber": 1186,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: Käse am Anfang Einfuhrwagen T10B erwartet (T10-203)",
      "lineNumber": 1187,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: Käse am Anfang Einfuhrwagen T10B nicht erwartet (T10-203)",
      "lineNumber": 1188,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1189,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Käse übertragt aktiv (T10: Transportbahn T10A SCHRITT 7)",
      "lineNumber": 1190,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Käse am Anfang Einfuhrwagen T10B erwartet (T10-203) =",
      "lineNumber": 1192,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Kein Käse detektiert (T10: Käsezähler Anfang T10B RUHE)",
      "lineNumber": 1195,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Käse am Anfang Einfuhrwagen T10B nicht erwartet (T10-203) =",
      "lineNumber": 1202,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Käse detektiert (T10: Käsezähler Anfang T10B SCHRITT 1)",
      "lineNumber": 1205,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Käse am Ende Einfuhrwagen T10B erwartet (T10-204) =",
      "lineNumber": 1211,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Kein Käse detektiert (T10: Käsezähler Ende T10B RUHE)",
      "lineNumber": 1214,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde: Variable_1 (Anzahl Käse am T10B anwesend) > 0",
      "lineNumber": 1215,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Käse am Ende Einfuhrwagen T10B nicht erwartet (T10-204) =",
      "lineNumber": 1220,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Käse detektiert (T10: Käsezähler Ende T10B SCHRITT 1)",
      "lineNumber": 1223,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde: Variable_1 (Anzahl Käse am T10B anwesend) = 0",
      "lineNumber": 1224,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Transportbahn Käse Anfuhr T11B\tFB148",
      "lineNumber": 1229,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10_TransportbahnAnfuhr_T11B",
      "lineNumber": 1230,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Transportbahn Käse Abfuhr T10B\tFB150",
      "lineNumber": 1231,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10B_TransportAbfuhr",
      "lineNumber": 1232,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Käse abführe von T10B in der Reihe=",
      "lineNumber": 1233,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Käse Auf T10B anwesend (T10: Transportbahn Käse anfuhr T10B SCHRITT 5-10)",
      "lineNumber": 1235,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Reihe füllen aktiv (T10: Füllen Horde SCHRITT 2-3)",
      "lineNumber": 1236,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Reihe füllen aktiv (T10: Füllen Horde NICHT SCHRITT 2-3)",
      "lineNumber": 1239,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Transportbahn T10B =",
      "lineNumber": 1240,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Warten bis Käse anwesend auf Anfang T10B (T10: Transportbahn Käse anfuhr T10B SCHRITT 2-4)",
      "lineNumber": 1241,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1242,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1244,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "[Neues reihe/Horde selektiert (T10: Füllen Horde SCHRITT 1)",
      "lineNumber": 1245,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Käse Auf T10B anwesend (T10: Transportbahn Käse anfuhr T10B SCHRITT 3-6+9-10)]",
      "lineNumber": 1246,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1247,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Freigabe Start Transportbänder T10 A,B,C (Reinigung Einfuhrwagen: SCHRITT ??)",
      "lineNumber": 1248,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Stopp Transportbahn T10B =",
      "lineNumber": 1249,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Käse am Ende Einfuhrwagen T10B erwartet (T10-204)",
      "lineNumber": 1250,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: Kein Käse am Ende Einfuhrwagen T10B erwartet (T10-204)",
      "lineNumber": 1251,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit 1 (Käse abfuhren von T10B)",
      "lineNumber": 1252,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Käse Auf T10B anwesend (T10: Transportbahn Käse anfuhr T10B SCHRITT 3-6+9-10)",
      "lineNumber": 1254,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Reihe füllen aktiv (T10: Füllen Horde SCHRITT 2-3)",
      "lineNumber": 1256,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Käse vorbei zahlpunkt Ende T10B (Käsezähler Ende T10B SCHRITT 1&2)",
      "lineNumber": 1258,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Reihe füllen nicht aktiv (T10: Füllen Horde NICHT SCHRITT 2-3)",
      "lineNumber": 1259,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "PT=",
      "lineNumber": 1260,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "T10: Transportbahn Käse Abfuhr T11B\tFB152",
      "lineNumber": 1262,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T11B_TransportAbfuhr",
      "lineNumber": 1263,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Transportbahn positionieren T10C\tFB154",
      "lineNumber": 1264,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10_TransportbahnPositionieren_T10C",
      "lineNumber": 1265,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Einfuhrbahn T10C heben (T10: Positionieren Einfuhrwagen SCHRITT 4)",
      "lineNumber": 1267,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Einfuhrbahn T10C unten erwartet (T10-205)",
      "lineNumber": 1271,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Einfuhrbahn T10C nicht oben erwartet (T10-206)",
      "lineNumber": 1272,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Einfuhrbahn T10C oben erwartet (T10-206)",
      "lineNumber": 1281,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Einfuhrbahn T10C nicht unten erwartet (T10-205)",
      "lineNumber": 1282,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Einfuhrbahn T10C senken (T10: Positionieren Einfuhrwagen SCHRITT 7)",
      "lineNumber": 1284,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Einfuhrwagen nach Reinigungsposition (T10: Einfuhrwagen nach Reinigungsposition SCHRITT 3)",
      "lineNumber": 1285,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Einfuhrbahn T10C oben erwartet (T10-206)",
      "lineNumber": 1289,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Einfuhrbahn T10C nicht unten erwartet (T10-205)",
      "lineNumber": 1290,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Einfuhrbahn T10C unten erwartet (T10-205)",
      "lineNumber": 1299,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Einfuhrbahn T10C nicht oben erwartet (T10-206)",
      "lineNumber": 1300,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start MT10C nach oben (Auto_Start) =",
      "lineNumber": 1302,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start MT10C nach unten (Auto_Reverse) =",
      "lineNumber": 1305,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Stopp MT10C =",
      "lineNumber": 1308,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Einfuhrbahn T10C unten erwartet (T10-205)",
      "lineNumber": 1309,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: Einfuhrbahn T10C nicht oben erwartet (T10-206)",
      "lineNumber": 1310,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Einfuhrbahn T10C oben erwartet (T10-206) =",
      "lineNumber": 1311,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1317,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Einfuhrbahn T10C nicht oben erwartet (T10-206) =",
      "lineNumber": 1323,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung Einfuhrbahn T10C unten erwartet (T10-205) =",
      "lineNumber": 1330,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1336,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Einfuhrbahn T10C nicht unten erwartet (T10-205) =",
      "lineNumber": 1342,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Transportbahn positionieren T11C\tFB156",
      "lineNumber": 1349,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T10_TransportbahnPositionieren_T11C",
      "lineNumber": 1350,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N10_N11_Einfuhrrinne",
      "lineNumber": 1353,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Pumpe MP11 von Einfuhrrinne N10 nach Salzbad =",
      "lineNumber": 1354,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Stopp Pumpe MP10 von Einfuhrrinne N10 nach Salzbad =",
      "lineNumber": 1357,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Pumpe MP10 von Einfuhrrinne N20 nach Salzbad",
      "lineNumber": 1358,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1359,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Analog Eingang N20-400-PT (Niveaumessung in Wanne)",
      "lineNumber": 1360,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Variable 1 (Geschwindigkeit MP10) =",
      "lineNumber": 1361,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Zirkulationspumpe MP63 nach Einfuhrrinne N09/N20 =",
      "lineNumber": 1364,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Stopp Zirkulationspumpe MP63 nach Einfuhrrinne N09/N20 =",
      "lineNumber": 1367,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Hoch Niveau Einfuhrrinne N20",
      "lineNumber": 1368,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1369,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Zirkulationspumpe MP63 nach Einfuhrrinne N09/N20",
      "lineNumber": 1370,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1371,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Zirkulationsventil P63-300",
      "lineNumber": 1372,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Variable 2 (Geschwindigkeit 2MP63) =",
      "lineNumber": 1373,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Einstellung Strömung 2N09/N20 bei Einfuhr Ruhe",
      "lineNumber": 1374,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhr nicht aktiv (Hauptprogramm Einfuhr RUHE)",
      "lineNumber": 1375,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= Einstellung Strömung 2N09/N20 bei Produktion",
      "lineNumber": 1376,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhr aktiv (Hauptprogramm Einfuhr NICHT RUHE)",
      "lineNumber": 1377,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Strömung Einfuhrrinne N10/N11 OK =",
      "lineNumber": 1378,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Geschwindigkeit 2MP63 = Einstellung Strömung 2N09/N20 bei Produktion",
      "lineNumber": 1380,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Zirkulationsventil 2P63-300 öffnen =",
      "lineNumber": 1382,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Zeit (Ausschaltverzögerung)",
      "lineNumber": 1384,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Störung: Hoch Niveau Einfuhrrinne 2N09/N20 =",
      "lineNumber": 1385,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit (10 Sek)",
      "lineNumber": 1388,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zeit (10 Sek)",
      "lineNumber": 1391,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Selektion 1e Horde gestartet (Selektionsprogramm Horde für Ausfuhr SCHRITT 1)",
      "lineNumber": 1400,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Entleeren 1e Horde aktiv:",
      "lineNumber": 1402,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Entleeren Horde N32 SCHRITT 7",
      "lineNumber": 1404,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Entleeren Horde N33 SCHRITT 7",
      "lineNumber": 1405,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Entleeren Horde N34 SCHRITT 7 ]",
      "lineNumber": 1406,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Strömung Ausfuhrrinne N40: Strömung Ausfuhrrinne N40 OK",
      "lineNumber": 1407,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Entleeren fertig (Entleeren Horde Reihe für Reihe RUHE)",
      "lineNumber": 1411,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "T40: Positionieren Ausfuhrwagen RUHE",
      "lineNumber": 1412,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T40: Transport MT40B Ausfuhrwagen RUHE",
      "lineNumber": 1413,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Strömung Ausfuhrrinne N40: Strömung Ausfuhrrinne N40 OK",
      "lineNumber": 1415,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Freigabe Start Ausfuhr =",
      "lineNumber": 1430,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "T40: Positionieren Haken T40 RUHE",
      "lineNumber": 1436,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T40: Positionieren Ausfuhrwagen RUHE",
      "lineNumber": 1437,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T40:Transport MT40D Ausfuhrwagen RUHE",
      "lineNumber": 1438,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T40: Positionieren Ausfuhrwagen: Ausfuhrwagen T40 vor Bad",
      "lineNumber": 1439,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Vorselektiere Horde für 1e Entleerung OK =",
      "lineNumber": 1451,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Hordenummer >= 31",
      "lineNumber": 1453,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Hordenummer <= 34",
      "lineNumber": 1454,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "{ [Horden Ausfuhrtabelle. Reihe[1]. Von Etage = 20",
      "lineNumber": 1456,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1457,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Etage >= 1}",
      "lineNumber": 1460,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 6",
      "lineNumber": 1463,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1464,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1467,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 1",
      "lineNumber": 1469,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1470,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe >= 1",
      "lineNumber": 1473,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe <= 6 }",
      "lineNumber": 1474,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Bis Etage <= Horden Ausfuhrtabelle. Reihe[1]. Von Etage",
      "lineNumber": 1476,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Bis Etage >= 1",
      "lineNumber": 1477,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Bis Etage <= 20",
      "lineNumber": 1478,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "{ Horden Ausfuhrtabelle. Reihe[1]. Bis Etage = Horden Ausfuhrtabelle. Reihe[1]. Von Etage",
      "lineNumber": 1480,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Bis Reihe <= Horden Ausfuhrtabelle. Reihe[1]. Von Reihe",
      "lineNumber": 1482,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1483,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Bis Reihe >= Horden Ausfuhrtabelle. Reihe[1]. Von Reihe]",
      "lineNumber": 1485,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Horden Ausfuhrtabelle. Reihe[1]. Bis Etage < Horden Ausfuhrtabelle. Reihe[1]. Von Etage}",
      "lineNumber": 1486,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Bis Reihe >= 1",
      "lineNumber": 1487,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Bis Reihe <= 6 }",
      "lineNumber": 1488,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ungerade Etage vorselektiert =",
      "lineNumber": 1489,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Überlegende Etagen leer =",
      "lineNumber": 1491,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Etage >=",
      "lineNumber": 1492,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Linker Reihen leer =",
      "lineNumber": 1494,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 1",
      "lineNumber": 1495,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 2 = 0",
      "lineNumber": 1496,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 3 = 0",
      "lineNumber": 1497,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 4 = 0",
      "lineNumber": 1498,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 5 = 0",
      "lineNumber": 1499,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 6 = 0",
      "lineNumber": 1500,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1501,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 2",
      "lineNumber": 1502,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 3 = 0",
      "lineNumber": 1503,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 4 = 0",
      "lineNumber": 1504,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 5 = 0",
      "lineNumber": 1505,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 6 = 0",
      "lineNumber": 1506,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1507,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 3",
      "lineNumber": 1508,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 4 = 0",
      "lineNumber": 1509,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 5 = 0",
      "lineNumber": 1510,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 6 = 0",
      "lineNumber": 1511,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1512,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 4",
      "lineNumber": 1513,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 5 = 0",
      "lineNumber": 1514,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 6 = 0",
      "lineNumber": 1515,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1516,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 5",
      "lineNumber": 1517,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 6 = 0",
      "lineNumber": 1518,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1519,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 6",
      "lineNumber": 1520,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Rechter Reihen leer =",
      "lineNumber": 1521,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 1",
      "lineNumber": 1522,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1523,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 2",
      "lineNumber": 1524,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 1 = 0",
      "lineNumber": 1525,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1526,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 3",
      "lineNumber": 1527,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 1 = 0",
      "lineNumber": 1528,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 2 = 0",
      "lineNumber": 1529,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1530,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 3",
      "lineNumber": 1531,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 1 = 0",
      "lineNumber": 1532,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 2 = 0",
      "lineNumber": 1533,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1534,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 4",
      "lineNumber": 1535,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 1 = 0",
      "lineNumber": 1536,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 2 = 0",
      "lineNumber": 1537,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 3 = 0",
      "lineNumber": 1538,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1539,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 5",
      "lineNumber": 1540,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 1 = 0",
      "lineNumber": 1541,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 2 = 0",
      "lineNumber": 1542,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 3 = 0",
      "lineNumber": 1543,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 4 = 0",
      "lineNumber": 1544,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1545,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Von Reihe = 6",
      "lineNumber": 1546,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 1 = 0",
      "lineNumber": 1547,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 2 = 0",
      "lineNumber": 1548,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 3 = 0",
      "lineNumber": 1549,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 4 = 0",
      "lineNumber": 1550,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde[Horden Ausfuhrtabelle. Reihe[1]. Hordenummer].Von Etage.Anzahl Käse Reihe 5 = 0",
      "lineNumber": 1551,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Pause Ausfuhr =",
      "lineNumber": 1552,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausfuhr aktiv =",
      "lineNumber": 1559,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Staumeldung Ausfuhrrinne T40 =",
      "lineNumber": 1562,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "(Strömung Ausfuhrrinne N40: Strömung Ausfuhrrinne 2N30 OK",
      "lineNumber": 1564,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "(Strömung Ausfuhrrinne N40: Strömung Ausfuhrrinne N40 OK",
      "lineNumber": 1568,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Vorgewählte Horde auf Automat =",
      "lineNumber": 1571,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Hordenummer = 31",
      "lineNumber": 1572,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1574,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Hordenummer = 32",
      "lineNumber": 1575,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1577,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Hordenummer = 33",
      "lineNumber": 1578,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1580,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Hordenummer = 34",
      "lineNumber": 1581,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Selektiere 1e zu entleeren Horde bei Start Produktion (Hauptprogramm Ausfuhr SCHRITT 1)",
      "lineNumber": 1586,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1587,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Ausfuhr aktiv (Hauptprogramm Ausfuhr SCHRITT 3)",
      "lineNumber": 1588,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "[Horde N31 fast fertig mit Entleeren (Entleeren Horde N31 SCHRITT 8)",
      "lineNumber": 1589,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Horde N32 fast fertig mit Entleeren (Entleeren Horde N32 SCHRITT 8)",
      "lineNumber": 1590,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N33 fast fertig mit Entleeren (Entleeren Horde N33 SCHRITT 8)",
      "lineNumber": 1591,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N34 fast fertig mit Entleeren (Entleeren Horde N34 SCHRITT 8)]",
      "lineNumber": 1592,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Hordenummer >=31",
      "lineNumber": 1594,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1]. Hordenummer <=34",
      "lineNumber": 1595,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N31 unterwegs (Entleeren Horde N31 SCHRITT 4)",
      "lineNumber": 1597,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Horde N32 unterwegs (Entleeren Horde N32 SCHRITT 4)",
      "lineNumber": 1598,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N33 unterwegs (Entleeren Horde N33 SCHRITT 4)",
      "lineNumber": 1599,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N34 unterwegs (Entleeren Horde N34 SCHRITT 4)",
      "lineNumber": 1600,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "1e Horde bereit für Entleerung (Hauptprogramm Ausfuhr SCHRITT 2)",
      "lineNumber": 1602,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1603,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horde N31 fertig mit Entleeren (Entleeren Horde N31: Horde aktiv und fertig mit Entleeren)",
      "lineNumber": 1604,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Horde N32 fertig mit Entleeren (Entleeren Horde N32: Horde aktiv und fertig mit Entleeren)",
      "lineNumber": 1605,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Horde N33 fertig mit Entleeren (Entleeren Horde N33: Horde aktiv und fertig mit Entleeren)",
      "lineNumber": 1606,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Horde N34 fertig mit Entleeren (Entleeren Horde N34: Horde aktiv und fertig mit Entleeren)",
      "lineNumber": 1607,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1608,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Keine aktive Horde (Horden Ausfuhrtabelle. Reihe[0]. Hordenummer = 0)",
      "lineNumber": 1609,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N31 beschäftigt mit Entleeren (Entleeren Horde N31 SCHRITT 7)",
      "lineNumber": 1613,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Horde N32 beschäftigt mit Entleeren (Entleeren Horde N32 SCHRITT 7)",
      "lineNumber": 1614,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N33 beschäftigt mit Entleeren (Entleeren Horde N33 SCHRITT 7)",
      "lineNumber": 1615,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N34 beschäftigt mit Entleeren (Entleeren Horde N34 SCHRITT 7)",
      "lineNumber": 1616,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1617,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Ausfuhr beendet (Hauptprogramm Ausfuhr NICHT SCHRITT 1-3)",
      "lineNumber": 1619,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Wartereihe Ausfuhrtabelle durchschieben ==",
      "lineNumber": 1621,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Ausfuhrtabelle.Ausfuhrtabelle[1]",
      "lineNumber": 1623,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Ausfuhrtabelle.Ausfuhrtabelle[2]",
      "lineNumber": 1625,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Ausfuhrtabelle.Ausfuhrtabelle[3]",
      "lineNumber": 1627,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Ausfuhrtabelle.Ausfuhrtabelle[4]",
      "lineNumber": 1629,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Ausfuhrtabelle.Ausfuhrtabelle[5]",
      "lineNumber": 1631,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Ausfuhrtabelle.Ausfuhrtabelle[6]",
      "lineNumber": 1633,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "-1",
      "lineNumber": 1635,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Wartereihe Ausfuhrtabelle löschen ==",
      "lineNumber": 1637,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausfuhr fertig (Hauptprogramm Ausfuhr SCHRITT 8)",
      "lineNumber": 1638,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= Ausfuhrtabelle.Ausfuhrtabelle[6]",
      "lineNumber": 1639,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Ausfuhrtabelle.Ausfuhrtabelle[6]",
      "lineNumber": 1641,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Ausfuhrtabelle.Ausfuhrtabelle[6]",
      "lineNumber": 1643,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Ausfuhrtabelle.Ausfuhrtabelle[6]",
      "lineNumber": 1645,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Ausfuhrtabelle.Ausfuhrtabelle[6]",
      "lineNumber": 1647,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Ausfuhrtabelle.Ausfuhrtabelle[6]",
      "lineNumber": 1649,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Obenste Reihe Ausfuhrtabelle (aktive Horde) löschen ==",
      "lineNumber": 1651,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausfuhr aktiv (Hauptprogramm Ausfuhr SCHRITT 3)",
      "lineNumber": 1652,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Kein nächste Horde vorselektiert (SCHRITT 1)",
      "lineNumber": 1653,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "[ Horde N31 nicht beschäftigt mit Entleeren (Entleeren Horde N31 RUHE)",
      "lineNumber": 1654,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde N32 nicht beschäftigt mit Entleeren (Entleeren Horde N32 RUHE)",
      "lineNumber": 1655,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde N33 nicht beschäftigt mit Entleeren (Entleeren Horde N33 RUHE)",
      "lineNumber": 1656,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde N34 nicht beschäftigt mit Entleeren (Entleeren Horde N34 RUHE) ]",
      "lineNumber": 1657,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zeit (??)",
      "lineNumber": 1660,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T40_nach_Rein_pos",
      "lineNumber": 1668,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 unten erwartet (T40-202)",
      "lineNumber": 1675,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 oben nicht erwartet (T40-203)",
      "lineNumber": 1676,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T40: Positionieren Ausfuhrwagen RUHE",
      "lineNumber": 1679,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Gestartet (T40: Positionieren Ausfuhrwagen NICHT RUHE)",
      "lineNumber": 1683,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Fertig (T40: Positionieren Ausfuhrwagen RUHE)",
      "lineNumber": 1685,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Ausfuhrwagen = ?? (Zwischenposition)",
      "lineNumber": 1686,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Haken auf oberer Position (Positionieren Haken T40 SCHRITT 4)",
      "lineNumber": 1688,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 oben erwartet (T40-203)",
      "lineNumber": 1689,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 unten nicht erwartet (T40-202)",
      "lineNumber": 1690,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 oben erwartet (T40-203)",
      "lineNumber": 1700,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 unten nicht erwartet (T40-202)",
      "lineNumber": 1701,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T40: Positionieren Ausfuhrwagen RUHE",
      "lineNumber": 1706,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Gestartet (T40: Positionieren Ausfuhrwagen NICHT RUHE)",
      "lineNumber": 1710,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Fertig (T40: Positionieren Ausfuhrwagen RUHE)",
      "lineNumber": 1712,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Ausfuhrwagen = ?? (Reinigungsposition)",
      "lineNumber": 1713,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Freigabe Ausfuhrwagen von Bad nach Reinigungsposition =",
      "lineNumber": 1715,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausfuhr nicht aktiv (Hauptprogramm Ausfuhr RUHE)",
      "lineNumber": 1716,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "T40: Positionieren Ausfuhrwagen: Ausfuhrwagen T40 vor Bad",
      "lineNumber": 1718,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 unten erwartet (T40-202)",
      "lineNumber": 1723,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 oben nicht erwartet (T40-203)",
      "lineNumber": 1724,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Meldung: Ausfuhrwagen 1e Teil T40A heben mit Hand =",
      "lineNumber": 1725,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Meldung: Ausfuhrwagen 2e Teil T40B heben mit Hand =",
      "lineNumber": 1728,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Reinigung_T40",
      "lineNumber": 1735,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Freigabe Reinigung T40 =",
      "lineNumber": 1750,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausfuhr nicht aktiv (Hauptprogramm Ausfuhr RUHE)",
      "lineNumber": 1751,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Aktuelle Position Ausfuhrwagen = ?? (Reinigungsposition)",
      "lineNumber": 1752,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Käsezähler_T40A",
      "lineNumber": 1759,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Käse erwartet (T40: Transportbahn T40A: Start Transportbahn T40A)",
      "lineNumber": 1761,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit (?? Sek, remanent)",
      "lineNumber": 1764,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zeit (?? Sek, remanent)",
      "lineNumber": 1768,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "T40: Entleeren Horde Reihe für Reihe\tFB230",
      "lineNumber": 1771,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T40_Entleeren",
      "lineNumber": 1772,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Entleeren Horde N31 (Entleeren Horde N31 SCHRITT 6)",
      "lineNumber": 1774,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Start Entleeren Horde N32 (Entleeren Horde N32 SCHRITT 6)",
      "lineNumber": 1775,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Start Entleeren Horde N33 (Entleeren Horde N33 SCHRITT 6)",
      "lineNumber": 1776,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Start Entleeren Horde N34 (Entleeren Horde N34 SCHRITT 6)",
      "lineNumber": 1777,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1778,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Ausfuhrwagen T40 nicht gestartet (T40: Positionieren Ausfuhrwagen RUHE+SCHRITT 1-3)",
      "lineNumber": 1782,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken unten erwartet (T40-202)",
      "lineNumber": 1789,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 oben nicht erwartet (T40-203)",
      "lineNumber": 1790,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Ausfuhrbahn 1e T40A unten erwartet (T40-205)",
      "lineNumber": 1791,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Ausfuhrbahn 2e T40B unten erwartet (T40-207)",
      "lineNumber": 1792,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Ausfuhrwagen schon gestartet (T40: Positionieren Ausfuhrwagen NICHT RUHE)",
      "lineNumber": 1796,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Ausfuhrwagen T40 gestartet (T40: Positionieren Ausfuhrwagen SCHRITT 4)",
      "lineNumber": 1798,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1799,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Aktuelle Position Ausfuhrwagen T40 = Erwünschte Position Ausfuhrwagen T40",
      "lineNumber": 1802,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausfuhrwagen nicht gestartet (T40: Positionieren Ausfuhrwagen RUHE)",
      "lineNumber": 1803,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Positionieren Horde N31 in RUHE: Horde N31: Heben/Senken RUHE)",
      "lineNumber": 1807,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1809,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N32 in RUHE: Horde N32: Heben/Senken RUHE)",
      "lineNumber": 1811,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1813,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N33 in RUHE: Horde N33: Heben/Senken RUHE)",
      "lineNumber": 1815,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1817,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N34 in RUHE: Horde N34: Heben/Senken RUHE)",
      "lineNumber": 1819,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Positionieren Horde N31 gestartet (Horde N31: Heben/Senken NICHT RUHE)",
      "lineNumber": 1823,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1824,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N32 gestartet (Horde N32: Heben/Senken NICHT RUHE)",
      "lineNumber": 1826,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1827,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N33 gestartet (Horde N33: Heben/Senken NICHT RUHE)",
      "lineNumber": 1829,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1830,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N34 gestartet (Horde N34: Heben/Senken NICHT RUHE)",
      "lineNumber": 1832,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1833,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N31 in RUHE: Horde N31: Heben/Senken RUHE)",
      "lineNumber": 1837,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N31 = Erwünschte Position Horde N31",
      "lineNumber": 1838,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1839,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N32 in RUHE: Horde N32: Heben/Senken RUHE)",
      "lineNumber": 1841,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N32 = Erwünschte Position Horde N32",
      "lineNumber": 1842,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1843,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N33 in RUHE: Horde N33: Heben/Senken RUHE)",
      "lineNumber": 1845,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N33 = Erwünschte Position Horde N33",
      "lineNumber": 1846,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1847,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N34 in RUHE: Horde N34: Heben/Senken RUHE)",
      "lineNumber": 1849,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N34 = Erwünschte Position Horde N34",
      "lineNumber": 1850,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausfuhrwagen nicht gestartet (T40: Positionieren Ausfuhrwagen RUHE)",
      "lineNumber": 1852,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Ausfuhrwagen T40 = Erwünschte Position Ausfuhrwagen T40",
      "lineNumber": 1853,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Positionieren Horde N31 in RUHE: Horde N31: Heben/Senken RUHE)",
      "lineNumber": 1855,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N31 = Erwünschte Position Horde N31",
      "lineNumber": 1856,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1857,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N32 in RUHE: Horde N32: Heben/Senken RUHE)",
      "lineNumber": 1859,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N32 = Erwünschte Position Horde N32",
      "lineNumber": 1860,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1861,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N33 in RUHE: Horde N33: Heben/Senken RUHE)",
      "lineNumber": 1863,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N33 = Erwünschte Position Horde N33",
      "lineNumber": 1864,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1865,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N34 in RUHE: Horde N34: Heben/Senken RUHE)",
      "lineNumber": 1867,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N34 = Erwünschte Position Horde N34 ]",
      "lineNumber": 1868,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Strömung Ausfuhrrinne N40: Strömung Ausfuhrrinne N40 OK",
      "lineNumber": 1870,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Haken auf oberer Position (Positionieren Haken T40 SCHRITT 4)",
      "lineNumber": 1881,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 oben erwartet (T40-203)",
      "lineNumber": 1882,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 unten nicht erwartet (T40-202)",
      "lineNumber": 1883,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit (?? Sek)",
      "lineNumber": 1885,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "NICHT Störung: Kein Käse T40A erwartet (T40-200)",
      "lineNumber": 1886,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "[ Zähler 1 (Entleerzähler aus Reihe von Horde) <= 1",
      "lineNumber": 1887,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Drucktaste Reihe leer bedient",
      "lineNumber": 1888,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Drucktaste nächste Horde bedient ]",
      "lineNumber": 1889,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Zähler 1 (Entleerzähler aus Reihe von Horde) <= 0",
      "lineNumber": 1892,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Drucktaste Reihe leer bedient",
      "lineNumber": 1893,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Drucktaste nächste Horde bedient",
      "lineNumber": 1894,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Haken auf oberer Position (Positionieren Haken T40 SCHRITT 7)",
      "lineNumber": 1896,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 oben nicht erwartet (T40-203)",
      "lineNumber": 1897,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 unten erwartet (T40-202)",
      "lineNumber": 1898,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1899,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Ausfuhrwagen nicht gestartet (T40: Positionieren Ausfuhrwagen RUHE)",
      "lineNumber": 1901,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Ausfuhrwagen T40 = Erwünschte Position Ausfuhrwagen T40",
      "lineNumber": 1902,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Positionieren Horde N31 in RUHE: Horde N31: Heben/Senken RUHE)",
      "lineNumber": 1904,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N31 = Erwünschte Position Horde N31",
      "lineNumber": 1905,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1906,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N32 in RUHE: Horde N32: Heben/Senken RUHE)",
      "lineNumber": 1908,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N32 = Erwünschte Position Horde N32",
      "lineNumber": 1909,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1910,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N33 in RUHE: Horde N33: Heben/Senken RUHE)",
      "lineNumber": 1912,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N33 = Erwünschte Position Horde N33",
      "lineNumber": 1913,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1914,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Positionieren Horde N34 in RUHE: Horde N34: Heben/Senken RUHE)",
      "lineNumber": 1916,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N34 = Erwünschte Position Horde N34]",
      "lineNumber": 1917,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Ende Ausfuhr (Hauptprogramm Ausfuhr SCHRITT 4) ]",
      "lineNumber": 1919,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1923,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Ende Ausfuhr (Hauptprogramm Ausfuhr NICHT SCHRITT 3)",
      "lineNumber": 1924,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "NICHT Ende Ausfuhr (Hauptprogramm Ausfuhr SCHRITT 3)",
      "lineNumber": 1929,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Erwünschte Etage >= 1",
      "lineNumber": 1933,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Etage <= 20",
      "lineNumber": 1934,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Reihe >= 1",
      "lineNumber": 1935,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Reihe <= 6",
      "lineNumber": 1936,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Beschäftigt mit Abfuhr letzte Käse vorige Reihe =",
      "lineNumber": 1939,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Warten auf letzte Käse aus Reihe (SCHRITT 9)",
      "lineNumber": 1941,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zähler 1 (Entleerzähler aus Reihe von Horde) <= 0",
      "lineNumber": 1943,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Nächste Horde nach diese Reihe =",
      "lineNumber": 1944,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Etage = 1",
      "lineNumber": 1945,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Reihe = 1",
      "lineNumber": 1946,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1947,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Erwünschte Etage = Horden Ausfuhrtabelle. Reihe[0]. Bis Etage",
      "lineNumber": 1948,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Reihe = Horden Ausfuhrtabelle. Reihe[0]. Bis Reihe",
      "lineNumber": 1949,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1950,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1952,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Nächste Etage nach diese Reihe =",
      "lineNumber": 1954,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Reihe = 1",
      "lineNumber": 1955,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1957,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Erwünschte Reihe = 6",
      "lineNumber": 1958,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausfuhrwagen neu positionieren nach diese Reihe =",
      "lineNumber": 1960,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1964,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1968,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Erwünschte Etage = Horden Ausfuhrtabelle. Reihe[0]. Bis Etage",
      "lineNumber": 1969,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Reihe = Horden Ausfuhrtabelle. Reihe[0]. Bis Reihe",
      "lineNumber": 1970,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1].Hordenummer >= 31",
      "lineNumber": 1971,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1].Hordenummer <= 34",
      "lineNumber": 1972,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1973,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1].Hordenummer >= 31",
      "lineNumber": 1974,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[1].Hordenummer <= 34",
      "lineNumber": 1975,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Drucktaste Reihe ist leer bedient =",
      "lineNumber": 1977,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Drucktaste nächste Horde bedient =",
      "lineNumber": 1984,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Stau hinten Ausfuhrwagen =",
      "lineNumber": 1991,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Hauptprogramm Ausfuhr: NICHT Staumeldung Ausfuhrrinne N40",
      "lineNumber": 1994,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit (?? Sek)",
      "lineNumber": 1995,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 1996,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Hauptprogramm Ausfuhr: Staumeldung Ausfuhrrinne N40",
      "lineNumber": 1998,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit (?? Sek)]",
      "lineNumber": 1999,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zeit (?? Sek)",
      "lineNumber": 2004,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Stopp Ausfuhrwagen bei Stau =",
      "lineNumber": 2006,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Zähler 1 (Entleerzähler aus Reihe von Horde) ==",
      "lineNumber": 2009,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "-1",
      "lineNumber": 2010,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Käse gezählt am 1e Teil T40A (Käsezähler T40 SCHRITT 1&2)",
      "lineNumber": 2011,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= Variable 3 (Anzahl Käse in Reihe)",
      "lineNumber": 2012,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Entleeren (SCHRITT 6&7)",
      "lineNumber": 2013,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 0",
      "lineNumber": 2014,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausfuhr nicht aktiv (Hauptprogramm Ausfuhr RUHE)",
      "lineNumber": 2015,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2016,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Variable 1 (Erwünschte Etage) =",
      "lineNumber": 2018,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Horden Ausfuhrtabelle. Reihe[0]. von Etage",
      "lineNumber": 2019,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Bestimmen erste zu Entleeren Etage (RUHE & SCHRITT 1)",
      "lineNumber": 2020,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 20",
      "lineNumber": 2023,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Bestimmen erste zu Entleeren Etage (RUHE & SCHRITT 1)",
      "lineNumber": 2024,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Horden Ausfuhrtabelle. Reihe[0]. von Etage > 20 ]",
      "lineNumber": 2026,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "-1",
      "lineNumber": 2027,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Neue Etage bestimmen (SCHRITT 13&14)",
      "lineNumber": 2028,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 0",
      "lineNumber": 2030,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Fertig (SCHRITT 12)",
      "lineNumber": 2031,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Ungerade Etage =",
      "lineNumber": 2032,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 2 (Erwünschte Reihe) =",
      "lineNumber": 2034,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Horden Ausfuhrtabelle. Reihe[0]. von Reihe",
      "lineNumber": 2035,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Bestimmen erste zu Entleeren Reihe (RUHE & SCHRITT 1)",
      "lineNumber": 2036,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[0]. von Reihe >=1",
      "lineNumber": 2037,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horden Ausfuhrtabelle. Reihe[0]. von Reihe <=6",
      "lineNumber": 2038,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= 1",
      "lineNumber": 2039,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Bestimmen erste zu Entleeren Reihe (RUHE & SCHRITT 1)",
      "lineNumber": 2040,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Horden Ausfuhrtabelle. Reihe[0]. von Reihe > 6 ]",
      "lineNumber": 2042,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2044,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Neue Reihe bestimmen (SCHRITT 13&14)",
      "lineNumber": 2045,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 6",
      "lineNumber": 2048,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Bestimmen erste zu Entleeren Reihe (RUHE & SCHRITT 1)",
      "lineNumber": 2049,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Horden Ausfuhrtabelle. Reihe[0]. von Reihe > 6 ]",
      "lineNumber": 2051,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2053,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Neue Reihe bestimmen (SCHRITT 13&14)",
      "lineNumber": 2054,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+1",
      "lineNumber": 2057,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Neue Reihe bestimmen (SCHRITT 13&14)",
      "lineNumber": 2058,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "-1",
      "lineNumber": 2062,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Neue Reihe bestimmen (SCHRITT 13&14)",
      "lineNumber": 2063,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 0",
      "lineNumber": 2067,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Fertig (SCHRITT 12)",
      "lineNumber": 2068,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Variable 3 (Anzahl Käse in Reihe) =",
      "lineNumber": 2069,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 4 (Besonderheit in Reihe) =",
      "lineNumber": 2071,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 5 (Istwert Salzungszeit (Stunden)) =",
      "lineNumber": 2073,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 6 (Istwert Salzungszeit (Minuten)) =",
      "lineNumber": 2075,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 7 (Sollwert Salzungszeit (Stunden)) =",
      "lineNumber": 2077,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 8 (Sollwert Salzungszeit (Minuten)) =",
      "lineNumber": 2079,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Hordetür öffnen?  (SCHRITT (4+5)&6)",
      "lineNumber": 2083,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Besonderheit in Reihe = Störung",
      "lineNumber": 2084,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Ausfuhr wird beendet (SCHRITT 12)",
      "lineNumber": 2087,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Hordetür öffnen?  (SCHRITT (4+5)&6)",
      "lineNumber": 2090,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Besonderheit in Reihe = Sortentrennung",
      "lineNumber": 2091,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Ausfuhr wird beendet (SCHRITT 12)",
      "lineNumber": 2094,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Hordetür öffnen (SCHRITT (4+5)&6)",
      "lineNumber": 2097,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Besonderheit in Reihe = Erste Käse der Produktionstag",
      "lineNumber": 2098,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Ausfuhr wird beendet (SCHRITT 12)",
      "lineNumber": 2101,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Salzungszeit Kontrolle ignoriert =",
      "lineNumber": 2107,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Entleeren N31 (Entleeren N31 SCHRITT 6)",
      "lineNumber": 2112,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Start Entleeren N32 (Entleeren N32 SCHRITT 6)",
      "lineNumber": 2113,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Start Entleeren N33 (Entleeren N33 SCHRITT 6)",
      "lineNumber": 2114,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Start Entleeren N34 (Entleeren N34 SCHRITT 6)",
      "lineNumber": 2115,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "T40: Positionieren Haken T40\tFB232",
      "lineNumber": 2116,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Positionieren_Haken_T40",
      "lineNumber": 2117,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Haken T40 oben (Ausfuhr T40 von nach Reinigungsposition SCHRITT 4)",
      "lineNumber": 2119,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Haken oben (T40: Positionieren Ausfuhrwagen SCHRITT 5)",
      "lineNumber": 2120,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Haken T40 oben (T40: Entleeren Horde Reihe für Reihe SCHRITT 7)",
      "lineNumber": 2121,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 unten erwartet (T40-202)",
      "lineNumber": 2125,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 oben nicht erwartet (T40-203)",
      "lineNumber": 2126,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 oben erwartet (T40-203)",
      "lineNumber": 2135,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 unten nicht erwartet (T40-202)",
      "lineNumber": 2136,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Haken T40 unter (T40: Entleeren Horde Reihe für Reihe SCHRIIT 2)",
      "lineNumber": 2138,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Haken T40 unter (T40: Entleeren Horde Reihe für Reihe SCHRIIT 10)",
      "lineNumber": 2139,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Freigabe Ausfuhrwagen von Bad nach Reinigungsposition (Ausfuhrwagen T40 von Bad nach Reinigungsposition)",
      "lineNumber": 2140,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "NICHT Störung: Einfuhrbahn T40 oben erwartet (T40-203)",
      "lineNumber": 2144,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Einfuhrbahn T40 unten nicht erwartet (T40-202)",
      "lineNumber": 2145,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 unten erwartet (T40-202)",
      "lineNumber": 2154,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Haken T40 oben nicht erwartet (T40-203)",
      "lineNumber": 2155,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start MT40C nach oben (Auto_Start) =",
      "lineNumber": 2157,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start MT40C nach unten (Auto_Reverse) =",
      "lineNumber": 2160,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Stopp MT40C =",
      "lineNumber": 2163,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Haken T40 unten erwartet (T40-202)",
      "lineNumber": 2164,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: Haken T40 oben nicht erwartet (T40-203)",
      "lineNumber": 2165,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Haken T40 unten erwartet (T40-202) =",
      "lineNumber": 2166,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2172,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Haken T40 unten nicht erwartet (T40-202) =",
      "lineNumber": 2178,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Haken T40 oben erwartet (T40-203) =",
      "lineNumber": 2185,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2191,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Haken T40 oben nicht erwartet (T40-203) =",
      "lineNumber": 2197,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T40: Positionieren Ausfuhrwagen\tFB234",
      "lineNumber": 2204,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: T40_PositionierenAusfuhrwagen",
      "lineNumber": 2205,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start positionieren Ausfuhrwagen (T40: Entleeren Horde Reihe für Reihe SCHRITT 2)",
      "lineNumber": 2207,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2208,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Start Ausfuhrwagen nach Zwischenposition (Ausfuhrwagen T40 von Bad nach Reinigungsposition SCHRITT 2)",
      "lineNumber": 2209,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2210,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Start Ausfuhrwagen nach Reinigungsposition (Ausfuhrwagen T40 von Bad nach Reinigungsposition SCHRITT 8)",
      "lineNumber": 2211,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2212,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Zählen Käse aus Reihe (T40: Entleeren Horde Reihe für Reihe SCHRITT 8)",
      "lineNumber": 2213,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T40: Entleeren Horde Reihe für Reihe: Zahler 1(Entleerzähler aus Reihe Horde) <= 5",
      "lineNumber": 2214,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T40: Entleeren Horde Reihe für Reihe: Ausfuhrwagen neu positionieren nach diese Reihe",
      "lineNumber": 2215,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2216,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Drucktaste nächste Reihe/Horde bedient (T40: Füllen Horde Reihe für Reihe SCHRITT 9)",
      "lineNumber": 2217,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T40: Entleeren Horde Reihe für Reihe: Einfuhrwagen neu positionieren nach diese Reihe",
      "lineNumber": 2218,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Ausfuhrwagen auf Position (T40: Transport MT40D Ausfuhrwagen RUHE)",
      "lineNumber": 2220,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "[Ausfuhrwagen nach Reinigungsposition (Ausfuhrwagen von Bad nach Reinigungsposition SCHRITT 9)",
      "lineNumber": 2221,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "NICHT Störung: 1e Teil Ausfuhrbahn T40A nicht in richtige Position (T40-204/205)",
      "lineNumber": 2224,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2225,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Ausfuhrwagen nach Reinigungsposition (Ausfuhrwagen von Bad nach Reinigungsposition NICHT SCHRITT 9)",
      "lineNumber": 2226,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "NICHT Störung: 1e Teil Ausfuhrbahn T40A nicht in richtige Position (T40-204/205)]",
      "lineNumber": 2229,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start positionieren Ausfuhrwagen (T40: Entleeren Horde Reihe für Reihe SCHRITT 3)",
      "lineNumber": 2233,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Warten bis letzte Käse aus Horde (T40: Entleeren Horde Reihe für Reihe SCHRITT 9)",
      "lineNumber": 2234,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Ausfuhrwagen nach Zwischenposition (Ausfuhrwagen von Bad nach Reinigungsposition SCHRITT 3)",
      "lineNumber": 2235,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Ausfuhrwagen nach Reinigungsposition (Ausfuhrwagen von Bad nach Reinigungsposition SCHRITT 9)",
      "lineNumber": 2236,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "[ Start positionieren Ausfuhrwagen (T40: Entleeren Horde Reihe für Reihe SCHRITT 3)",
      "lineNumber": 2238,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Ausfuhrwagen nach Zwischenposition (Ausfuhrwagen von Bad nach Reinigungsposition SCHRITT 3)",
      "lineNumber": 2239,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Ausfuhrwagen nach Reinigungsposition (Ausfuhrwagen von Bad nach Reinigungsposition SCHRITT 9) ]",
      "lineNumber": 2240,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Zeit (?? Sek)",
      "lineNumber": 2241,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Ausfuhrwagen auf Position (T40: Transport MT40D Ausfuhrwagen RUHE)",
      "lineNumber": 2243,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "[ Ausfuhrwagen nach Reinigungsposition (Ausfuhrwagen von Bad nach Reinigungsposition SCHRITT 9)",
      "lineNumber": 2244,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2245,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Ausfuhrwagen nach Reinigungsposition (Ausfuhrwagen von Bad nach Reinigungsposition NICHT SCHRITT 9) ]",
      "lineNumber": 2246,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Ausfuhrwagen gestartet (T40: Transport Ausfuhrwagen NICHT RUHE)",
      "lineNumber": 2248,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Ausfuhrwagen auf Position (T40: Transport Ausfuhrwagen RUHE)",
      "lineNumber": 2250,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2251,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Ausfuhr beendet (Hauptprogramm Ausfuhr SCHRITT 4)",
      "lineNumber": 2253,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Ausfuhrwagen T40 vor Bad =",
      "lineNumber": 2255,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Istwert Position T40 [mm] >= Sollwert Zwischenposition [mm] - Marge [mm]",
      "lineNumber": 2256,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausfuhrwagen T40 aussen Bad (Reinigungsgebiet) =",
      "lineNumber": 2257,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Istwert Position T40 [mm] <= Sollwert Zwischenposition [mm] + Marge [mm]",
      "lineNumber": 2258,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "T40: Transport MT40D Ausfuhrwagen\tFB236",
      "lineNumber": 2259,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Transport_MT40D",
      "lineNumber": 2260,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Transport Ausfuhrwagen T40 (T40: Positionieren Ausfuhrwagen SCHRITT 5)",
      "lineNumber": 2262,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "[ Hauptprogramm Ausfuhr: SCHRITT 2-6",
      "lineNumber": 2266,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Ausfuhrwagen nach Zwischenposition (Ausfuhrwagen von Bad nach Reinigungsposition SCHRITT 3)",
      "lineNumber": 2267,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Ausfuhrwagen nach Reinigungsposition (Ausfuhrwagen von Bad nach Reinigungsposition SCHRITT 9) ]",
      "lineNumber": 2268,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2288,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Stopp Transport MT40D Ausfuhrwagen T40 =",
      "lineNumber": 2292,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung:MT40A",
      "lineNumber": 2293,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: MT40B",
      "lineNumber": 2294,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: MT40C",
      "lineNumber": 2295,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: MT40D",
      "lineNumber": 2296,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung Laser (T40-900-GTP): Synchronfehler",
      "lineNumber": 2297,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung Laser (T40-900-GTP): Zu große Änderung Wert",
      "lineNumber": 2298,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung Laser (T40-900-GTP): Vorbei erwünschte Position",
      "lineNumber": 2299,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Pos: 6\t\tHorde N31\tReihe 6",
      "lineNumber": 2306,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Sollwert OK =",
      "lineNumber": 2331,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Sollwert Position >= 1 (N31 Reihe 1)",
      "lineNumber": 2332,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Sollwert Position <= 24 (N34 Reihe 6)",
      "lineNumber": 2333,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2334,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Sollwert Position = 55?? (Reinigungsposition)",
      "lineNumber": 2335,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2336,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Sollwert Position = 56?? (Zwischenposition)",
      "lineNumber": 2337,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 1 (Erwünschte Position Ausfuhrwagen T40) =",
      "lineNumber": 2338,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= (Aktive Horde – 31)* 5 + Erwünschte Reihe",
      "lineNumber": 2339,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "T40: Entleeren Horde Reihe für Reihe SCHRITT 1&2",
      "lineNumber": 2340,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "= 55",
      "lineNumber": 2341,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= 56",
      "lineNumber": 2343,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Variable 2 (Sollwert Position [1..56]) =",
      "lineNumber": 2345,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Erwünschte Position Ausfuhrwagen T40",
      "lineNumber": 2346,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Positionieren (RUHE&SCHRITT 1)",
      "lineNumber": 2347,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "T40: Transportbahn T40A\tFB238",
      "lineNumber": 2348,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Transportbahn_T40A",
      "lineNumber": 2349,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Transportbahn T40A =",
      "lineNumber": 2350,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Hauptprogramm Ausfuhr: SCHRITT 2-6",
      "lineNumber": 2351,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Freigabe Start Transportbänder T40A,B (Reinigung Ausfuhrwagen: SCHRITT 2)",
      "lineNumber": 2352,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Stopp Transportbahn T40A =",
      "lineNumber": 2353,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "NICHT Störung: Ausfuhrbahn 1e T40A unten erwartet (T40-205)",
      "lineNumber": 2355,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2356,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2358,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2360,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Käse auf 2e Teil Ausfuhrbahn T40A (Käsezähler) erwartet (T40-200)",
      "lineNumber": 2361,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2362,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Käse auf 2e Teil Ausfuhrbahn T40A (Käsezähler) nicht erwartet (T40-200)",
      "lineNumber": 2363,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2364,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: 1e Teil Ausfuhrbahn T40A nicht in richtige Position (T40-205/206) ]",
      "lineNumber": 2365,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Kein Freigabe Start Transportbänder T40A,B (Reinigung Ausfuhrwagen: NICHT SCHRITT 2 )",
      "lineNumber": 2366,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2367,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Freigabe Start Transportbänder T40A,B (Reinigung Ausfuhrwagen: SCHRITT 2 )",
      "lineNumber": 2368,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2370,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: 1e Teil Ausfuhrbahn T40A nicht in richtige Position (T40-204/205) ]",
      "lineNumber": 2371,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Stopp Transportbahnen wenn leergedreht bei Pause =",
      "lineNumber": 2372,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Käse auf 2e Teil Ausfuhrbahn T40A (Käsezähler) erwartet (T40-200)=",
      "lineNumber": 2381,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Käse wird ausgeführt aus Horde (T40: Entleeren Horde Reihe für Reihe SCHRITT 8+9)",
      "lineNumber": 2383,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Ausfuhr gestartet (Hauptprogramm Ausfuhr NICHT RUHE)",
      "lineNumber": 2387,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zeit (??s)",
      "lineNumber": 2389,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2393,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Käse auf 2e Teil Ausfuhrbahn T40A (Käsezähler) nicht erwartet (T40-200)",
      "lineNumber": 2395,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "{ [ Kein Käse aus Horde (T40: Entleeren Horde Reihe für Reihe NICHT SCHRITT 8+9)",
      "lineNumber": 2397,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT T40 Entleeren Horde Reihe für Reihe: Stau hinten Ausfuhrwagen",
      "lineNumber": 2398,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT T40 Entleeren Horde Reihe für Reihe:  Beschäftigt mit Abfuhr letzte Käse  vorige Reihe",
      "lineNumber": 2399,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Käsezähler T40A SCHRITT 1 ]",
      "lineNumber": 2400,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Zeit(±??s)",
      "lineNumber": 2402,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Start Ausfuhr (Hauptprogramm Ausfuhr RUHE&SCHRITT 1) }",
      "lineNumber": 2403,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Ausfuhr gestartet (Hauptprogramm Ausfuhr NICHT RUHE)",
      "lineNumber": 2404,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Störung: 1e Teil Ausfuhrbahn T40A nicht in richtige Position (T40-204/205) =",
      "lineNumber": 2409,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2413,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Freigabe Start Transportbänder T40A,B (Reinigung Ausfuhrwagen T40: SCHRITT 2)",
      "lineNumber": 2414,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T40: Transportbahn T40B\tFB240",
      "lineNumber": 2419,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Transportbahn_T40B",
      "lineNumber": 2420,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Transportbahn T40B =",
      "lineNumber": 2421,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Hauptprogramm Ausfuhr: SCHRITT 2-6",
      "lineNumber": 2422,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Freigabe Start Transportbänder T40A,B (Reinigung Ausfuhrwagen: SCHRITT 2+3)",
      "lineNumber": 2423,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Stopp Transportbahn T40B=",
      "lineNumber": 2424,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2426,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2428,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "T40 Entleeren Horde Reihe für Reihe: Stau hinten Ausfuhrwagen",
      "lineNumber": 2429,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2430,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "T40: Transportbahn T40A : Stopp Transportbahnen wenn leergedreht bei Pause",
      "lineNumber": 2431,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2432,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Käse in Rinne N40 hinten Ausfuhrbahn T40B erwartet (T40-201)",
      "lineNumber": 2433,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2434,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Käse in Rinne N40 hinten Ausfuhrbahn T40B nicht erwartet (T40-201)",
      "lineNumber": 2435,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2436,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: 2e Teil Ausfuhrbahn T40B nicht in richtige Position (T40-206/207) ]",
      "lineNumber": 2437,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Kein Freigabe Start Transportbänder T40A,B (Reinigung Ausfuhrwagen T40: NICHT SCHRITT 2 )",
      "lineNumber": 2438,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2439,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Freigabe Start Transportbänder T40A,B (Reinigung Ausfuhrwagen T40: SCHRITT 2 )",
      "lineNumber": 2440,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2442,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: 2e Teil Ausfuhrbahn T40B nicht in richtige Position (T40-206/207) ]",
      "lineNumber": 2443,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zähler 1 (Anzahl Käse vorbei Käsezähler für Störungsdetektion T40-201) =",
      "lineNumber": 2444,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+1",
      "lineNumber": 2445,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Käse gezählt am 2e Teil T40A (Käsezähler T40 SCHRITT 1&2)",
      "lineNumber": 2446,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 0",
      "lineNumber": 2447,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2449,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Käse in Rinne N40 hinten Ausfuhrbahn T40B erwartet (T40-201)",
      "lineNumber": 2450,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Käse in Rinne N40 hinten Ausfuhrbahn T40B erwartet (T40-201) =",
      "lineNumber": 2451,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Ausfuhr gestartet (Hauptprogramm Ausfuhr NICHT RUHE)",
      "lineNumber": 2455,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zeit (??s)",
      "lineNumber": 2456,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Störung: Käse in Rinne N40 hinten Ausfuhrbahn T40B nicht erwartet (T40-201) =",
      "lineNumber": 2460,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "[ Hauptprogramm Ausfuhr: NICHT Staumeldung Ausfuhrrinne N40",
      "lineNumber": 2462,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2465,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Start Ausfuhr (Hauptprogramm Ausfuhr RUHE&SCHRITT 1)",
      "lineNumber": 2466,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2468,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Entleeren Ausfuhrrinne N40 (Hauptprogramm Ausfuhr SCHRITT 5)",
      "lineNumber": 2469,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Strömung Ausfuhrrinne N40: Strömung Ausfuhrrinne N40 OK",
      "lineNumber": 2470,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit (?? Minuten) ]",
      "lineNumber": 2471,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Ausfuhr gestartet (Hauptprogramm Ausfuhr NICHT RUHE)",
      "lineNumber": 2472,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zähler 2 (Anzahl Käse vorbei Käsezähler für Störungsdetektion N40-200) =",
      "lineNumber": 2476,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+1",
      "lineNumber": 2477,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Käse gezählt am 2e Teil T40A (Käsezähler T40 SCHRITT 1&2)",
      "lineNumber": 2478,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 0",
      "lineNumber": 2479,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2481,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Käse bei Staumeldung Ausfuhrrinne erwartet (N40-200)",
      "lineNumber": 2482,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Käse bei Staumeldung Ausfuhrrinne erwartet (N40-200) =",
      "lineNumber": 2483,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Strömung Ausfuhrrinne N40: Strömung Ausfuhrrinne N40 OK",
      "lineNumber": 2486,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Ausfuhr gestartet (Hauptprogramm Ausfuhr NICHT RUHE)",
      "lineNumber": 2487,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zeit (??s)",
      "lineNumber": 2488,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ HAND HMI11)",
      "lineNumber": 2492,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Käse bei Staumeldung Ausfuhrrinne nicht erwartet (N40-200) =",
      "lineNumber": 2493,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Entleeren Ausfuhrrinne N40 (Hauptprogramm Ausfuhr SCHRITT 5)",
      "lineNumber": 2495,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Strömung Ausfuhrrinne N40: Strömung Ausfuhrrinne N40 OK",
      "lineNumber": 2496,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit (?? Minuten)",
      "lineNumber": 2497,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2498,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Start Ausfuhr (Hauptprogramm Ausfuhr RUHE&SCHRITT 1)",
      "lineNumber": 2499,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ HAND HMI11)",
      "lineNumber": 2504,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: 2e Teil Ausfuhrbahn T40B nicht in richtige Position (T40-206/207) =",
      "lineNumber": 2505,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2509,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Freigabe Start Transportbänder T40A,B (Reinigung Ausfuhrwagen T40: SCHRITT 2)",
      "lineNumber": 2510,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N40_Ausfuhrrinne",
      "lineNumber": 2517,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N21_FüllenHorde",
      "lineNumber": 2521,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Horde N21 vorselektiert für Füllen (Selektionsprogramm Horden für Einfuhr SCHRITT 2)",
      "lineNumber": 2523,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde nicht beschäftigt mit Umschwimmen (Umschwimmen Horde N21 nach N31 RUHE)",
      "lineNumber": 2526,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde in RUHE (Horde N21 Heben/Senken RUHE)",
      "lineNumber": 2527,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Selektionsprogramm Horden für Einfuhr NICHT Meldung: Käse in Etage(n) oben 1e zu füllen Etage",
      "lineNumber": 2532,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Gestartet (Horde N21 Heben/Senken SCHRITT 1)",
      "lineNumber": 2534,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht Ende Einfuhr (Hauptprogramm Einfuhr SCHRITT 2-5)",
      "lineNumber": 2536,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Strömung Salzbad N20: Strömung Salzbad für Einfuhr OK",
      "lineNumber": 2538,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Füllen gestartet (T10: Füllen Horde Reihe für Reihe SCHRITT 8)",
      "lineNumber": 2540,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde Reihe für Reihe: Erwünschte Etage Horde  >= 19",
      "lineNumber": 2542,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2543,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Füllen fertig (T10: Füllen Horde Reihe für Reihe RUHE)",
      "lineNumber": 2544,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2545,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde Reihe für Reihe: Drucktaste nächste Horde bedient",
      "lineNumber": 2546,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Füllen fertig (T10: Füllen Horde Reihe für Reihe RUHE)",
      "lineNumber": 2548,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Horde in RUHE: Horde N21 Heben/Senken RUHE)",
      "lineNumber": 2549,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2550,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horde in RUHE: Horde N21 Heben/Senken RUHE)",
      "lineNumber": 2552,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Ende Einfuhr (Hauptprogramm Einfuhr SCHRITT 7)",
      "lineNumber": 2553,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde N21 Heben/Senken Erwünschte Position Horde N21 = 20",
      "lineNumber": 2556,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Umschwimmen Horde N21 nach N31: Freigabe Umschwimmen von N21 nach N31",
      "lineNumber": 2558,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ NICHT Etage 20 alle Reihen gefüllt",
      "lineNumber": 2565,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Umschwimmen Horde N21 nach N31: NICHT Freigabe Umschwimmen von N21 nach N31",
      "lineNumber": 2566,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ IMMER 1",
      "lineNumber": 2567,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2568,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Gestartet (Horde N21 Heben/Senken SCHRITT 1)",
      "lineNumber": 2572,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Fertig (Horde N21 Heben/Senken RUHE)",
      "lineNumber": 2574,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2575,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Beschaftigt mit umschwimmen (Umschwimmen Horde N21 nach N31 SCHRITT 1)",
      "lineNumber": 2577,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Ende Einfuhr (Hauptprogramm Einfuhr NICHT SCHRITT 2-6)",
      "lineNumber": 2580,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Fertig (Horde N21 Heben/Senken RUHE)",
      "lineNumber": 2582,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Füllen Horde gestartet =",
      "lineNumber": 2585,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Etage 20 alle Reihen gefüllt =",
      "lineNumber": 2587,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: zu füllen Horde N21 steht noch auf HAND =",
      "lineNumber": 2594,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N22_FüllenHorde",
      "lineNumber": 2598,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe N21: Füllen Horde",
      "lineNumber": 2599,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N23_FüllenHorde",
      "lineNumber": 2601,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe N21: Füllen Horde",
      "lineNumber": 2602,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N24_FüllenHorde",
      "lineNumber": 2604,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe N21: Füllen Horde",
      "lineNumber": 2605,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "N21: Umschwimmen Horde nach N31\tFB308",
      "lineNumber": 2606,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N21_UmschwimmenHordeNach_N31",
      "lineNumber": 2607,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Umschwimmen Horde N21 nach N31? (Füllen Horde N21: SCHRITT 9)",
      "lineNumber": 2610,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Horde N21 Heben/Senken Erwünschte Position Horde N21 = 21",
      "lineNumber": 2611,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2613,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Füllen Horde N21: RUHE",
      "lineNumber": 2615,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2618,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "ZEIT 1: Wartezeit Umschwimmen.Q",
      "lineNumber": 2619,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2620,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Füllen Horde N23 SCHRITT 6&7) ]",
      "lineNumber": 2623,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2641,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horde Positionieren Gestartet (Horde N31 Heben/Senken SCHRITT 1)",
      "lineNumber": 2647,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde N31 auf Position (Horde N31 Heben/Senken RUHE)",
      "lineNumber": 2649,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N31 = Erwünschte Position Horde N31",
      "lineNumber": 2650,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde Positionieren Gestartet (Horde N21 Heben/Senken SCHRITT 1)",
      "lineNumber": 2654,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde N21 auf Position (Horde N21 Heben/Senken RUHE)",
      "lineNumber": 2656,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N21 = Erwünschte Position Horde N21",
      "lineNumber": 2657,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N21 = Erwünschte Position Horde N21",
      "lineNumber": 2667,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Aktuelle Position Horde N31 = Erwünschte Position Horde N31",
      "lineNumber": 2668,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "NICHT Zeit (40 Sek) Strömungsjets N21-N24-300 Öffnen Strömungsjet für Horde wenn letzte Käse in Reihe",
      "lineNumber": 2672,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zeit(akkumulierend) (180 Sek)",
      "lineNumber": 2673,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+ Aktuelle Position Horde N21 = 20",
      "lineNumber": 2675,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Aktuelle Position Horde N21 = 19",
      "lineNumber": 2676,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Meldung: Ein der Horden N21-N24 steht längere Zeit auf Etage 19/ Laserkontrolle ausgeschaltet ]",
      "lineNumber": 2677,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Horde N21 Heben/Senken: Erwünschte Position Horde N21 = 1",
      "lineNumber": 2687,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Gestartet (Horde N31 Heben/Senken SCHRITT 1)",
      "lineNumber": 2693,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Fertig (Horde N31 Heben/Senken RUHE)",
      "lineNumber": 2695,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht vorselektiert (Selektionsprogramm Horden für Einfuhr NICHT SCHRITT 2)",
      "lineNumber": 2698,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Gestartet (Horde N31 Heben/Senken SCHRITT 1)",
      "lineNumber": 2700,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Fertig (Horde N31 Heben/Senken RUHE)",
      "lineNumber": 2702,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2703,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horde ist Vorselektiert (Selektionsprogramm Horden für Einfuhr SCHRITT 2)",
      "lineNumber": 2706,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2707,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Freigabe Umschwimmen von N21 nach N31 =",
      "lineNumber": 2712,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N31 ist ganz leer (Status = 0)",
      "lineNumber": 2713,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Nicht beschaftigt (Entleeren Horde N31: RUHE + SCHRITT 11)",
      "lineNumber": 2714,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Umschwimmen von N21 nach N31 beschäftigt =",
      "lineNumber": 2715,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Tür N21-101 öffnen =",
      "lineNumber": 2717,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Erwünschte Etage N21=",
      "lineNumber": 2722,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= 21 (Unterste Position)",
      "lineNumber": 2723,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "-1",
      "lineNumber": 2726,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Erwünschte Etage N31=",
      "lineNumber": 2728,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= 0 (Unterste Position)",
      "lineNumber": 2729,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+1",
      "lineNumber": 2732,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "ZEIT 1: Wartezeit Umschwimmen=",
      "lineNumber": 2734,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: um zu schwimmen Horde N21 steht noch auf HAND =",
      "lineNumber": 2741,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: um zu schwimmen Horde N31 steht noch auf HAND =",
      "lineNumber": 2744,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Tür N21-101 steht noch auf HAND =",
      "lineNumber": 2747,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Strömungsjet N21-300 steht noch auf HAND =",
      "lineNumber": 2750,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "N22: Umschwimmen Horde nach N32\tFB310",
      "lineNumber": 2753,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N22_UmschwimmenHordeNach_N32",
      "lineNumber": 2754,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe N21: Umschwimmen Horde nach N31",
      "lineNumber": 2755,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "N23: Umschwimmen Horde nach N33\tFB312",
      "lineNumber": 2756,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N23_UmschwimmenHordeNach_N33",
      "lineNumber": 2757,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe N21: Umschwimmen Horde nach N31",
      "lineNumber": 2758,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "N24: Umschwimmen Horde nach N34\tFB314",
      "lineNumber": 2759,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N24_UmschwimmenHordeNach_N34",
      "lineNumber": 2760,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe N21: Umschwimmen Horde nach N31",
      "lineNumber": 2761,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Horde N21 ausgeschaltet =",
      "lineNumber": 2764,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausgewählte Horde = 21",
      "lineNumber": 2766,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausgewählte Horde = 21",
      "lineNumber": 2769,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N22 ausgeschaltet =",
      "lineNumber": 2771,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausgewählte Horde = 22",
      "lineNumber": 2773,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausgewählte Horde = 22",
      "lineNumber": 2776,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N23 ausgeschaltet =",
      "lineNumber": 2778,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausgewählte Horde = 23",
      "lineNumber": 2780,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausgewählte Horde = 23",
      "lineNumber": 2783,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N24 ausgeschaltet =",
      "lineNumber": 2785,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausgewählte Horde = 24",
      "lineNumber": 2787,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Ausgewählte Horde = 24",
      "lineNumber": 2790,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N21_HebenSenken",
      "lineNumber": 2794,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Horde aufstellen für Füllen (Füllen Horde N21 SCHRITT 3)",
      "lineNumber": 2796,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2797,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horde nach unten während Produktion (Füllen Horde N21: Füllen Horde gestartet)",
      "lineNumber": 2798,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Positionieren Horde (T10: Füllen Horde Reihe für Reihe SCHRITT 5)",
      "lineNumber": 2799,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2800,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Start Horde nach unterste Position bei Ende Einfuhr (Füllen Horde N21 SCHRITT 11)",
      "lineNumber": 2801,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2802,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Start Horde N21 heben/senken (Umschwimmen Horde N21 nach N31 SCHRITT 7)",
      "lineNumber": 2803,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2804,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horde N21 ganz nach unten bringen (Umschwimmen Horde N21 nach N31 SCHRITT 21)",
      "lineNumber": 2805,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Istwert Position [mm] <= Sollwert Position [mm] + Marge [mm]",
      "lineNumber": 2827,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2831,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Ende Einfuhr (Hauptprogramm Einfuhr NICHT SCHRITT 1-6)",
      "lineNumber": 2836,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde nicht beschäftigt mit Umschwimmen (Umschwimmen Horde N21 nach N31 RUHE)",
      "lineNumber": 2837,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Sollwert OK =",
      "lineNumber": 2851,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Sollwert Position >=1",
      "lineNumber": 2852,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Sollwert Position <= 21",
      "lineNumber": 2853,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Stopp automatische Bewegung Horde =",
      "lineNumber": 2854,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung Laser (N21-900-GTP): Synchronfehler",
      "lineNumber": 2855,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung Laser (N21-900-GTP): Zu große Änderung Wert",
      "lineNumber": 2856,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung Laser (N21-900-GTP): Vorbei erwünschte Position",
      "lineNumber": 2857,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Stopp Bewegung Horde nach oben =",
      "lineNumber": 2858,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Störung: Gefüllte Etage Horde N21 ganz oben Salzlake",
      "lineNumber": 2859,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: Niveau in Hydraulikbehälter für Horde N21/N22 zu niedrig ??",
      "lineNumber": 2860,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Variable 1 (Erwünschte Position Horde N21) ==",
      "lineNumber": 2861,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Selektionsprogramm Horden für Einfuhr Erwünschte Etage für vorselektierte Horde",
      "lineNumber": 2862,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Horde aufstellen für Füllen (Füllen Horde N21 SCHRITT 2& 3)",
      "lineNumber": 2863,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= T10: Füllen Horde Reihe für Reihe: Erwünschte Etage",
      "lineNumber": 2864,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Horde wird gefüllt (Füllen Horde N21 SCHRITT 7+8)",
      "lineNumber": 2865,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Positionieren Horde (2T10: Füllen Horde Reihe für Reihe SCHRITT 1& 2)",
      "lineNumber": 2866,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "N21: Umschwimmen Horde nach N31: Erwünschte Etage",
      "lineNumber": 2867,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Bestimmen Etage Umschwimmen (N21: Umschwimmen Horde SCHRITT 6)",
      "lineNumber": 2868,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "= 21 (Unterste Position)",
      "lineNumber": 2869,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Horde nach unterste Position (Füllen Horde N21 SCHRITT 11)",
      "lineNumber": 2870,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+Horde nach unterste Position (Umschwimmen Horde N21 nach N31 SCHRITT 21)",
      "lineNumber": 2871,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Variable 2 (Sollwert Position [1..21]) ==",
      "lineNumber": 2872,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Erwünschte Position Horde N21",
      "lineNumber": 2873,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Positionieren (RUHE&SCHRITT 1)",
      "lineNumber": 2874,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Störung: Gefüllte Etage Horde N21 ganz oben Salzlake =",
      "lineNumber": 2875,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Niveau in Hydraulikbehälter für Horde N21/N22 zu niedrig =",
      "lineNumber": 2882,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N22_HebenSenken",
      "lineNumber": 2890,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe:  Horde N21 Heben/Senken",
      "lineNumber": 2891,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N23_HebenSenken",
      "lineNumber": 2893,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe:  Horde N21 Heben/Senken",
      "lineNumber": 2894,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N24_HebenSenken",
      "lineNumber": 2896,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe:  Horde N21 Heben/Senken",
      "lineNumber": 2897,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Laserkontrolle_N21_N24",
      "lineNumber": 2899,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Ein der Horden N21-N24 steht auf Etage 19 =",
      "lineNumber": 2900,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Horde N22 auf Position 19",
      "lineNumber": 2902,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N23 auf Position 19",
      "lineNumber": 2903,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N24 auf Position 19",
      "lineNumber": 2904,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Noch Käse detektiert in ein der Horden N21-N24 =",
      "lineNumber": 2905,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit (1 Sek)]",
      "lineNumber": 2912,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zeit (0.5 Sek)",
      "lineNumber": 2914,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Meldung: Ein der Horden N21-N24 steht längere Zeit auf Etage 19/ Laserkontrolle ausgeschaltet=",
      "lineNumber": 2919,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Strömungsjet für Horde N21 öffnen (N21-300) =",
      "lineNumber": 2925,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2928,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Öffnen Strömungsjet für Horde wenn Käse 1-11 einschwimmt ] ??",
      "lineNumber": 2930,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "….??....(Umschwimmen Horde N21 nach N31 SCHRITT 16)",
      "lineNumber": 2933,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2936,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "[NICHT Zeit (Ausschaltverzögerung 3 Sek)",
      "lineNumber": 2938,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2940,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N22 öffnen (N22-300)",
      "lineNumber": 2942,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N23 öffnen (N23-300)",
      "lineNumber": 2943,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N24 öffnen (N24-300)]",
      "lineNumber": 2944,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2947,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Strömungsjet für Horde N22 öffnen (N22-300) =",
      "lineNumber": 2950,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2953,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Öffnen Strömungsjet für Horde wenn Käse 1-11 einschwimmt ]",
      "lineNumber": 2955,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2961,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "[NICHT Zeit (Ausschaltverzögerung 3 Sek)Öffnen Strömungsjet für Horde wenn letzte Käse in Reihe",
      "lineNumber": 2963,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2964,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N21 öffnen (N21-300)",
      "lineNumber": 2966,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N23 öffnen (N23-300)",
      "lineNumber": 2967,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N24 öffnen (N24-300)]",
      "lineNumber": 2968,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2971,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Strömungsjet für Horde N23 öffnen (N23-300) =",
      "lineNumber": 2974,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2977,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Öffnen Strömungsjet für Horde wenn Käse 1-11 einschwimmt ]",
      "lineNumber": 2979,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2985,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "[NICHT Zeit (Ausschaltverzögerung 3 Sek)Öffnen Strömungsjet für Horde wenn letzte Käse in Reihe",
      "lineNumber": 2987,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2988,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N11 öffnen (N11-300)",
      "lineNumber": 2990,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N12 öffnen (N12-300)",
      "lineNumber": 2991,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N14 öffnen (N14-300)]",
      "lineNumber": 2992,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 2995,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Strömungsjet für Horde N24 öffnen (N24-300) =",
      "lineNumber": 2998,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3001,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Öffnen Strömungsjet für Horde wenn Käse 1-11 einschwimmt ]",
      "lineNumber": 3003,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3009,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "[NICHT Zeit (Ausschaltverzögerung 3 Sek) Öffnen Strömungsjet für Horde wenn letzte Käse in Reihe",
      "lineNumber": 3011,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3012,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N21 öffnen (N21-300)",
      "lineNumber": 3014,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N22 öffnen (N22-300)",
      "lineNumber": 3015,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N23 öffnen (N23-300)]",
      "lineNumber": 3016,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3019,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Öffnen Strömungsjet für Horde wenn letzte Käse in Reihe  =",
      "lineNumber": 3022,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Zählen Käse in Reihe (T10: Füllen Horde Reihe für Reihe SCHRITT 7)",
      "lineNumber": 3024,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde Reihe für Reihe: Zähler 1 (Füllzähler in Reihe von Horde) >= 11",
      "lineNumber": 3025,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3026,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Zeit kein Käsezufuhr (Zeit 4 aus T10:Transportbahn T10C)",
      "lineNumber": 3027,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde Reihe für Reihe: Käse in aktive Etage",
      "lineNumber": 3028,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3029,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde Reihe für Reihe: SCHRITT 8+9",
      "lineNumber": 3030,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zählen Käse in Reihe (T10: Füllen Horde Reihe für Reihe SCHRITT 7)",
      "lineNumber": 3032,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde Reihe für Reihe: Zähler 1 (Füllzähler in Reihe von Horde) = 0",
      "lineNumber": 3033,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Zeit kein Käsezufuhr (Zeit 4 aus T10:Transportbahn T10C)",
      "lineNumber": 3034,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3035,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde Reihe für Reihe: RUHE",
      "lineNumber": 3036,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Öffnen Strömungsjet für Horde wenn Käse 1-10 einschwimmt =",
      "lineNumber": 3037,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Zählen Käse in Reihe (T10: Füllen Horde Reihe für Reihe SCHRITT 7)",
      "lineNumber": 3039,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N22 öffnen (N22-300)",
      "lineNumber": 3042,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N23 öffnen (N23-300)",
      "lineNumber": 3043,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjet für Horde N24 öffnen (N24-300)]",
      "lineNumber": 3044,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "T10: Füllen Horde Reihe für Reihe: Zähler 1 (Füllzähler in Reihe von Horde) < ??",
      "lineNumber": 3045,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit (15 Sek)",
      "lineNumber": 3046,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zeit (3 Sek)",
      "lineNumber": 3049,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Strömungspumpe_P03",
      "lineNumber": 3051,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Pumpe Strömungsjets Einfuhr P03 =",
      "lineNumber": 3052,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ Umschwimmen Horde N22 nach N32 SCHRITT 3-15",
      "lineNumber": 3054,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Umschwimmen Horde N23 nach N33 SCHRITT 3-15",
      "lineNumber": 3055,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Umschwimmen Horde N24 nach N34 SCHRITT 3-15]",
      "lineNumber": 3056,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Strömungsjets N21-N24-300 Öffnen Strömungsjet für Horde wenn letzte Käse in Reihe",
      "lineNumber": 3057,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Stopp Pumpe Strömungsjets Einfuhr P03=",
      "lineNumber": 3058,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3064,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Pumpe Strömungsjets Einfuhr P03",
      "lineNumber": 3065,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Variable 1 (Geschwindigkeit MP03) =",
      "lineNumber": 3066,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= 15 Hz",
      "lineNumber": 3067,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "nicht Umschwimmen aktiv (Umschwimmen Horde N21 nach N31 NICHT SCHRITT 3-15)",
      "lineNumber": 3069,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "nicht Umschwimmen aktiv (Umschwimmen Horde N22 nach N32 NICHT SCHRITT 3-15)",
      "lineNumber": 3070,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "nicht Umschwimmen aktiv (Umschwimmen Horde N23 nach N33 NICHT SCHRITT 3-15)",
      "lineNumber": 3071,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "nicht Umschwimmen aktiv (Umschwimmen Horde N24 nach N34 NICHT SCHRITT 3-15)",
      "lineNumber": 3072,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 30 Hz",
      "lineNumber": 3073,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Umschwimmen aktiv (Umschwimmen Horde N21 nach N31 SCHRITT 3-15)",
      "lineNumber": 3074,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+Umschwimmen aktiv (Umschwimmen Horde N22 nach N32 SCHRITT 3-15)",
      "lineNumber": 3075,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+Umschwimmen aktiv (Umschwimmen Horde N23 nach N33 SCHRITT 3-15)",
      "lineNumber": 3076,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+Umschwimmen aktiv (Umschwimmen Horde N24 nach N34 SCHRITT 3-15)",
      "lineNumber": 3077,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N31_Entleeren",
      "lineNumber": 3081,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Horde aufstellen (Selektionsprogramm Horden für Ausfuhr SCHRITT 2)",
      "lineNumber": 3083,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde vorselektiert (Horden Ausfuhrtabelle. Reihe[1]. Hordenummer = 31)",
      "lineNumber": 3084,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde nicht beschäftigt mit Umschwimmen (Umschwimmen Horde N21 nach N31 RUHE + SCHRITT 1)",
      "lineNumber": 3087,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde in RUHE: Horde N31 Heben/Senken RUHE)",
      "lineNumber": 3088,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Gestartet (Horde N31 Heben/Senken SCHRITT 1)",
      "lineNumber": 3094,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Vorige Horde fertig mit Entleeren (T40: Entleeren Horde Reihe für Reihe RUHE)",
      "lineNumber": 3096,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Entleeren Horde (Selektionsprogramm Horden für Ausfuhr SCHRITT 5)",
      "lineNumber": 3097,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Entleeren gestartet (T40: Entleeren Horde Reihe für Reihe SCHRITT 8)",
      "lineNumber": 3103,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Während Aufstellen Horde direkt durch nach nächste (T30: Entleeren Horde Reihe für Reihe SCHRITT 11)",
      "lineNumber": 3104,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Entleeren fertig (T30: Entleeren Horde Reihe für Reihe RUHE)",
      "lineNumber": 3106,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ T30: Entleeren Horde Reihe für Reihe: Nächste Horde nach dieser Reihe",
      "lineNumber": 3107,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Entleeren fertig (T30: Entleeren Horde Reihe für Reihe RUHE)",
      "lineNumber": 3109,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Horde in RUHE: Horde N31 Heben/Senken RUHE)",
      "lineNumber": 3110,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Nicht auf Kontrolle(Entleeren Horde N32 NICHT SCHRITT 9)",
      "lineNumber": 3111,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht auf Kontrolle (Entleeren Horde N33 NICHT SCHRITT 9)",
      "lineNumber": 3112,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Nicht auf Kontrolle (Entleeren Horde N34 NICHT SCHRITT 9)",
      "lineNumber": 3113,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3116,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horde in RUHE: Horde N31 Heben/Senken RUHE)",
      "lineNumber": 3118,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Ende Ausfuhr (Hauptprogramm Ausfuhr SCHRITT 4)",
      "lineNumber": 3119,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde N31 Heben/Senken: Erwünschte Position Horde N31 = 1",
      "lineNumber": 3122,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Horde N31 ist ganz leer (Status = 0)",
      "lineNumber": 3123,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N21 wartet auf Umschwimmen (Umschwimmen Horde N21 nach N31 SCHRITT 1)",
      "lineNumber": 3124,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde N31 Heben/Senken: Erwünschte Position Horde N31 <> 1",
      "lineNumber": 3129,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ NICHT Horde N31 ist ganz leer (Status <>0)",
      "lineNumber": 3130,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ Horde N21 wartet nicht auf Umschwimmen (Umschwimmen Horde N21 nach N31 NICHT SCHRITT 1)",
      "lineNumber": 3131,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Gestartet (Horde N31 Heben/Senken SCHRITT 1)",
      "lineNumber": 3133,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Horde in RUHE: Horde N31 Heben/Senken RUHE)",
      "lineNumber": 3135,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3136,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Wartet auf freigabe starten Umschwimmen(Umschwimmen Horde N21 nach N31 SCHRITT 2)",
      "lineNumber": 3138,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Freigabe Vorselektion Ausfuhr =",
      "lineNumber": 3140,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Käse in Horde N31 (Status = 1, gefüllt (gelb))",
      "lineNumber": 3143,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde aktiv und fertig mit Entleeren =",
      "lineNumber": 3154,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde aktiv (Horden Ausfuhrtabelle. Reihe[0]. Hordenummer = 31)",
      "lineNumber": 3155,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Entleeren Horde gestartet =",
      "lineNumber": 3157,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N32_Entleeren",
      "lineNumber": 3160,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe: Entleeren Horde N31",
      "lineNumber": 3161,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N33_Entleeren",
      "lineNumber": 3163,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe: Entleeren Horde N31",
      "lineNumber": 3164,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N34_Entleeren",
      "lineNumber": 3166,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe: Entleeren Horde N31",
      "lineNumber": 3167,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N31_HebenSenken",
      "lineNumber": 3170,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Horde aufstellen für Entleeren (Entleeren Horde N31 SCHRITT 3)",
      "lineNumber": 3172,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3173,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horde nach oben während Produktion (Entleeren Horde N31: Entleeren Horde gestartet)",
      "lineNumber": 3174,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Positionieren Horde (T40: Entleeren Horde Reihe für Reihe SCHRITT 5)",
      "lineNumber": 3175,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3176,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Start Horde nach unterste Position bei Ende Ausfuhr (Entleeren Horde N31 SCHRITT 12)",
      "lineNumber": 3177,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3178,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Start Horde N31 heben/senken (Umschwimmen Horde N21 nach N31 SCHRITT 4)",
      "lineNumber": 3179,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3180,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horde N31 ganz nach unten bringen (Umschwimmen Horde N21 nach N31 SCHRITT 18)",
      "lineNumber": 3181,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Istwert Position [mm] >= Sollwert Position [mm] – Marge [mm]",
      "lineNumber": 3192,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Istwert Position [mm] <= Sollwert Position [mm] + Marge [mm]",
      "lineNumber": 3205,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3209,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Sollwert Position N31 = 21 (unterste Position)",
      "lineNumber": 3215,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Sollwert OK =",
      "lineNumber": 3229,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Sollwert Position >=1",
      "lineNumber": 3230,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Sollwert Position <= 21",
      "lineNumber": 3231,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Stopp automatische Bewegung Horde =",
      "lineNumber": 3232,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung Laser (N31-900-GTP): Synchronfehler",
      "lineNumber": 3233,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung Laser (N31-900-GTP): Zu große Änderung Wert",
      "lineNumber": 3234,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung Laser (N31-900-GTP): Vorbei erwünschte Position",
      "lineNumber": 3235,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Störung: Gefüllte Etage N31 ganz oben Salzlake",
      "lineNumber": 3236,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Horde N21 Heben/Senken Störung: Niveau in Hydraulikbehälter für Horde N31/N21 zu niedrig",
      "lineNumber": 3237,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Stopp Bewegung Horde nach oben =",
      "lineNumber": 3238,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Gefüllte Etage Horde N31 ganz oben Salzlake",
      "lineNumber": 3239,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Horde N21 Heben/Senken Störung: Niveau in Hydraulikbehälter für Horde N31/N31 zu niedrig",
      "lineNumber": 3240,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Stopp Horde nach unten bei Umschwimmen =",
      "lineNumber": 3241,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Zeit (4.0 Sek)",
      "lineNumber": 3246,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zeit (15 Sek)",
      "lineNumber": 3249,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Variable 1 (Erwünschte Position Horde N31) ==",
      "lineNumber": 3250,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Horden Ausfuhrtabelle. Reihe[1].Von Etage",
      "lineNumber": 3251,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Horde aufstellen für Entleeren (Entleeren Horde N31 SCHRITT 2&3)",
      "lineNumber": 3252,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 2T30: Entleeren Horde Reihe für Reihe: Erwünschte Etage",
      "lineNumber": 3253,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Horde wird entleert (Entleeren Horde N31 SCHRITT 7+8)",
      "lineNumber": 3254,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Positionieren Horde (2T30: Entleeren Horde Reihe für Reihe SCHRITT 1&2)",
      "lineNumber": 3255,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "N21: Umschwimmen Horde nach N31: Erwünschte Etage",
      "lineNumber": 3256,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Bestimmen Etage Umschwimmen (N21: Umschwimmen Horde nach N31 SCHRITT 2&3)",
      "lineNumber": 3257,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "= 21 (Unterste Position)",
      "lineNumber": 3258,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Horde nach unterste Position (Entleeren Horde N31 SCHRITT 12)",
      "lineNumber": 3259,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3260,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horde nach unterste Position (Umschwimmen Horde N21 nach N31 SCHRITT 18)",
      "lineNumber": 3261,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Variable 2 (Sollwert Position [1..21]) ==",
      "lineNumber": 3262,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Erwünschte Position Horde N31",
      "lineNumber": 3263,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Positionieren (RUHE&SCHRITT 1)",
      "lineNumber": 3264,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Störung: Gefüllte Etage Horde N31 ganz oben Salzlake =",
      "lineNumber": 3265,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N32_HebenSenken",
      "lineNumber": 3273,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe: Horde N31 Heben/Senken",
      "lineNumber": 3274,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N33_HebenSenken",
      "lineNumber": 3276,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe: Horde N31 Heben/Senken",
      "lineNumber": 3277,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: N34_HebenSenken",
      "lineNumber": 3279,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Siehe: Horde N31 Heben/Senken",
      "lineNumber": 3280,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Strömungsjet für Horde N31 öffnen (N31-300) =",
      "lineNumber": 3284,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde N31 wird entleert (Entleeren Horde N31 SCHRITT 5-8)",
      "lineNumber": 3285,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Strömungsjet für Horde N32 öffnen (N32-300) =",
      "lineNumber": 3287,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde 2N32 wird entleert (Entleeren Horde 2N32 SCHRITT 5-8)",
      "lineNumber": 3288,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Strömungsjet für Horde N33 öffnen (N33-300) =",
      "lineNumber": 3290,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde 2N33 wird entleert (Entleeren Horde 2N33 SCHRITT 5-8)",
      "lineNumber": 3291,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Strömungsjet für Horde N34 öffnen (N34-300) =",
      "lineNumber": 3293,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Horde 2N34 wird entleert (Entleeren Horde 2N34 SCHRITT 5-8)",
      "lineNumber": 3294,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Strömungspumpe P04",
      "lineNumber": 3297,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Pumpe Strömungsjets Ausfuhr P04 =",
      "lineNumber": 3298,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "[Horde N31 wird entleert (Entleeren Horde N31 SCHRITT 5-8)",
      "lineNumber": 3300,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3302,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horde N32 wird entleert (Entleeren Horde N32 SCHRITT 5-8)",
      "lineNumber": 3303,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3305,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horde N33 wird entleert (Entleeren Horde N33 SCHRITT 5-8)",
      "lineNumber": 3306,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3308,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Horde N34 wird entleert (Entleeren Horde N34 SCHRITT 5-8)",
      "lineNumber": 3309,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "NICHT Transportbahn T30A:  Stopp Transportbahnen wenn leergedreht bei Pause",
      "lineNumber": 3311,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Stopp Pumpe Strömungsjets Ausfuhr P04 =",
      "lineNumber": 3313,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3319,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Pumpe Strömungsjets Ausfuhr P04",
      "lineNumber": 3320,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Stopp Pumpe Strömungsjets Ausfuhr P04 wenn Jets nicht unten =",
      "lineNumber": 3321,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3324,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3327,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3330,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Strömung in aktive Ausfuhrhorde OK =",
      "lineNumber": 3333,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3337,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3340,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3343,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Variable 1 (Geschwindigkeit MP04) ==",
      "lineNumber": 3347,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= 25 Hz",
      "lineNumber": 3348,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= 15 Hz",
      "lineNumber": 3350,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Strömung N20",
      "lineNumber": 3354,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Start Zirkulationspumpe linker Seite Salzbad MP01 =",
      "lineNumber": 3355,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Stopp Zirkulationspumpe linker Seite MP01 =",
      "lineNumber": 3358,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Zirkulationspumpe Salzbad MP01",
      "lineNumber": 3359,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Variable 1 (Geschwindigkeit MP01) =",
      "lineNumber": 3360,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Einstellung Strömung MP01 bei kein Einfuhr",
      "lineNumber": 3361,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhr nicht aktiv (Hauptprogramm Einfuhr RUHE)",
      "lineNumber": 3363,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= Einstellung Strömung MP01 bei Einfuhr",
      "lineNumber": 3364,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhr aktiv (Hauptprogramm Einfuhr NICHT RUHE)",
      "lineNumber": 3366,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Strömung Salzbad N20 für Einfuhr OK =",
      "lineNumber": 3367,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Geschwindigkeit MP01 = Einstellung Strömung MP01 bei Einfuhr",
      "lineNumber": 3369,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Start Zirkulationspumpe Salzbad MP02 =",
      "lineNumber": 3371,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Stopp Zirkulationspumpe MP02 =",
      "lineNumber": 3374,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Zirkulationspumpe Salzbad MP02",
      "lineNumber": 3375,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Variable 1 (Geschwindigkeit MP02) =",
      "lineNumber": 3376,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "= Einstellung Strömung MP02 bei kein Einfuhr",
      "lineNumber": 3377,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhr nicht aktiv (Hauptprogramm Einfuhr RUHE)",
      "lineNumber": 3379,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= Einstellung Strömung MP02 bei Einfuhr",
      "lineNumber": 3380,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Einfuhr aktiv (Hauptprogramm Einfuhr NICHT RUHE)",
      "lineNumber": 3382,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Strömung Salzbad N20 OK =",
      "lineNumber": 3383,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Geschwindigkeit MP02 = Einstellung Strömung MP02 bei Einfuhr",
      "lineNumber": 3385,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Niveau in Salzbad N20 zu hoch =",
      "lineNumber": 3387,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Istwert Niveau >= LSH-Niveau",
      "lineNumber": 3388,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Niveau in Salzbad N20 zu niedrig =",
      "lineNumber": 3390,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Istwert Niveau <= LSL-Niveau",
      "lineNumber": 3391,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Entleeren N20",
      "lineNumber": 3394,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit (0.5 Sek)",
      "lineNumber": 3401,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Route_OK (Komm. Signal von SB4: Füllen Tank 125T2)",
      "lineNumber": 3403,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit (0.5 Sek)",
      "lineNumber": 3407,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "NICHT Route_OK (Komm. Signal von SB4: Füllen Tank 125T2)",
      "lineNumber": 3412,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Freigabe von Puffertanks =",
      "lineNumber": 3414,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Handbedienung oder Störung aktiv =",
      "lineNumber": 3417,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ 2MP62 Störung",
      "lineNumber": 3419,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ 2MP72 auf HAND",
      "lineNumber": 3420,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+ 2MP72 Störung",
      "lineNumber": 3421,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Anfrage Abfuhr =",
      "lineNumber": 3422,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Zeit(10 Sek)",
      "lineNumber": 3424,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Freigabe (Komm. Signal von SB4: Füllen Tank xx??)",
      "lineNumber": 3425,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Freigabe Pumpe MP62 Pumpe von Salzbad 2.1 nach Puffertank 125T2 =",
      "lineNumber": 3426,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Zeit (Ausschaltverzögerung 0.5 Sek)",
      "lineNumber": 3429,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Stopp Pumpe 2MP62 Pumpe von Salzbad 2.1 nach Puffertank 125T2 =",
      "lineNumber": 3430,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Pumpe 2MP62 Pumpe von Salzbad nach Puffertanks",
      "lineNumber": 3431,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3432,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Analog Eingang 2N15-400-PT (Niveaumessung in Salzbad)",
      "lineNumber": 3433,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Freigabe Pumpe 2MP72 Pumpe von Salzbad 2.2 nach Puffertank 125T2 =",
      "lineNumber": 3434,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Zeit (Ausschaltverzögerung 0.5 Sek)",
      "lineNumber": 3437,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Stopp Pumpe 2MP72 Pumpe von Salzbad 2.2 nach Puffertank 125T2 =",
      "lineNumber": 3438,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Pumpe 2MP72 Pumpe von Salzbad nach Puffertanks",
      "lineNumber": 3439,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3440,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Analog Eingang 2N17-400-PT (Niveaumessung in Salzbad)",
      "lineNumber": 3441,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Freigabe Öffnen Zufuhrventil Tank 125T2FV02 =",
      "lineNumber": 3442,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Anfrage (Komm. Signal nach SB4: Füllen Tank:Anfrage Salzlake abfuhren von Salzbad nach Puffertank) =",
      "lineNumber": 3444,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Läuft (Komm. Signal nach SB4: Füllen Tank: Zufuhrpumpe 2MP62 oder 2MP72 nach Puffertank läuft) =",
      "lineNumber": 3447,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ Pumpe 2MP72 dreht",
      "lineNumber": 3449,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Aus Zeile 1 der Produktionstabelle von K5=5 kopieren wir direkt die Chargedaten nach Salzbad 5.Das sind die Chargedaten von der aktuellen Charge die in Einfuhrrinne N10/N11 eingeströmt wird.",
      "lineNumber": 3452,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Besonderheit\tAktuelle Besonderheit (0=Kein, , 2= Sortenwechsel)",
      "lineNumber": 3456,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Chargedaten N10",
      "lineNumber": 3460,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "RUHE (Chargedaten N10)",
      "lineNumber": 3461,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3465,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "SCHRITT 1 (Kopieren Daten von K5 nach neue Chargedaten)",
      "lineNumber": 3468,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3470,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Einfuhr noch nicht gestartet(Hauptprogramm Einfuhr RUHE)",
      "lineNumber": 3473,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "SCHRITT 2 (Freigabe neue Chargedaten kopieren  nach N10?)",
      "lineNumber": 3477,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "SCHRITT 3 (Neue Chargedaten kopieren nach N10)",
      "lineNumber": 3479,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "SCHRITT 4 (Charge aktiv / Zählen Käse)",
      "lineNumber": 3481,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Anzahl Käse von Charge im N10 >= Anzahl Käse (Chargedaten N10)",
      "lineNumber": 3482,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Nicht Entleeren Einfuhrrinne von K5 bis N10 (Sortentrennung NICHT SCHRITT 1)",
      "lineNumber": 3483,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3484,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Einfuhrrinne entleert bis Blockierung N10 (Sortentrennung SCHRITT 2)",
      "lineNumber": 3485,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "SCHRITT 5 (Zurück nach SCHRITT 1)",
      "lineNumber": 3486,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Einfuhr beendet (Hauptprogramm Einfuhr SCHRITT ??)",
      "lineNumber": 3488,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3489,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Ende Produktion (K5 in Ruhe) (Komm. von K5)",
      "lineNumber": 3490,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "SCHRITT 6 (Kein Chargedaten mehr von K5?)",
      "lineNumber": 3491,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Chargenummer (Komm. von K5) = 0",
      "lineNumber": 3492,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Käsekode (Komm. von K5)  = 0",
      "lineNumber": 3493,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Anzahl Käse (Komm. von K5)  = 0",
      "lineNumber": 3494,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3495,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3497,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Ende Produktion (K5 in Ruhe) (Komm. von K5)",
      "lineNumber": 3498,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "SCHRITT 7 (Fertig)",
      "lineNumber": 3499,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Chargedaten OK =",
      "lineNumber": 3500,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Besonderheit (Neue Chargedaten)  == 0,1,2",
      "lineNumber": 3502,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Salzungszeit gültig (gültige Salzungszeit (Stunden > 0) ins Rezept",
      "lineNumber": 3506,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Neue Chargedaten ==",
      "lineNumber": 3507,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Chargedaten T10 ==",
      "lineNumber": 3512,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Zähler 1 (Anzahl gezählte Käse von Charge bei N10) =",
      "lineNumber": 3517,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+1",
      "lineNumber": 3518,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Käse detektiert auf mitten 2T09 (Käsezähler T09 SCHRITT 1&2)",
      "lineNumber": 3520,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "= 0",
      "lineNumber": 3521,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "[Chargenummer (Komm. von K2) = 0",
      "lineNumber": 3523,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Käsekode (Komm. von K2)  = 0",
      "lineNumber": 3524,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Anzahl Käse (Komm. von K2)  = 0",
      "lineNumber": 3525,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3526,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Bedienungsfunktionen SB2.2 Einfuhr EIN (NUR BEI BAD 2.1B: 2T19)]",
      "lineNumber": 3527,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ SCHRITT 5",
      "lineNumber": 3528,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Chargenummer von K2 nicht OK =",
      "lineNumber": 3529,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "[Chargenummer (Neue Chargedaten) = 0",
      "lineNumber": 3531,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "Störung: Käsekode von K2 nicht OK =",
      "lineNumber": 3532,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "[Käsekode (Neue Chargedaten) = 0",
      "lineNumber": 3534,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "+ NICHT Käsekode besteht]",
      "lineNumber": 3535,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "Störung: Besonderheit von K2 nicht OK =",
      "lineNumber": 3536,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Anzahl Käse von K2 nicht OK =",
      "lineNumber": 3539,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Anzahl Käse (Neue Chargedaten) = 0",
      "lineNumber": 3541,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "-Rezeptnummer",
      "lineNumber": 3548,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "-Käsekode",
      "lineNumber": 3549,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "-Rezeptname",
      "lineNumber": 3550,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "-Salzungszeit",
      "lineNumber": 3551,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    },
    {
      "originalLine": "FB701: Symbolik IDB: 2N11_Käse",
      "lineNumber": 3556,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB702: Symbolik IDB: 2N12_Käse",
      "lineNumber": 3557,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB703: Symbolik IDB: 2N13_Käse",
      "lineNumber": 3558,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB704: Symbolik IDB: 2N14_Käse",
      "lineNumber": 3559,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB711: Symbolik IDB: 2N31_Käse",
      "lineNumber": 3560,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB712: Symbolik IDB: 2N32_Käse",
      "lineNumber": 3561,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB713: Symbolik IDB: 2N33_Käse",
      "lineNumber": 3562,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB714: Symbolik IDB: 2N34_Käse",
      "lineNumber": 3563,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB721: Symbolik IDB: 2N11_schreiben\tDB1011: 2N11_Hordedaten",
      "lineNumber": 3565,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB722: Symbolik IDB: 2N12_schreiben\tDB1012: 2N12_Hordedaten",
      "lineNumber": 3566,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB723: Symbolik IDB: 2N13_schreiben\tDB1013: 2N13_Hordedaten",
      "lineNumber": 3567,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB724: Symbolik IDB: 2N14_schreiben\tDB1014: 2N14_Hordedaten",
      "lineNumber": 3568,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB731: Symbolik IDB: 2N31_schreiben\tDB1031: 2N31_Hordedaten",
      "lineNumber": 3569,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB732: Symbolik IDB: 2N32_schreiben\tDB1032: 2N32_Hordedaten",
      "lineNumber": 3570,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB733: Symbolik IDB: 2N33_schreiben\tDB1033: 2N33_Hordedaten",
      "lineNumber": 3571,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "FB734: Symbolik IDB: 2N34_schreiben\tDB1034: 2N34_Hordedaten",
      "lineNumber": 3572,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Salzbad 2.2: Horden 2N51/2N52/2N53",
      "lineNumber": 3594,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Symbolik IDB: Handbedienung Horde 2N51",
      "lineNumber": 3597,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Freigabe Horde 2N51 nach oben =",
      "lineNumber": 3598,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "[ 2LCP30-002-HS: Drucktaste Hebevorrichtung Horde 2N51 auf",
      "lineNumber": 3599,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ 2LCP31-002-HS: Drucktaste Hebevorrichtung Horde 2N51 auf",
      "lineNumber": 3600,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit (Einschaltverzögerung) ]",
      "lineNumber": 3601,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zeit (Ausschaltverzögerung)",
      "lineNumber": 3602,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "NICHT Störung: Hebevorrichtung Horde 2N51 zu hoch (2N51-200-GSM)",
      "lineNumber": 3603,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "NICHT Störung: Motorstarter Hydropumpe 2MP151",
      "lineNumber": 3604,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Freigabe Horde 2N51 nach unten =",
      "lineNumber": 3605,
      "analysis": {
        "hasNumbers": true,
        "hasColon": false,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "variable"
      },
      "suggestedRegex": "/^([^=]+)\\s*=\\s*(.*)$/",
      "suggestedGroup": "hulpmerker",
      "confidence": 0.8,
      "reasoning": [
        "Contains equals sign, likely variable assignment"
      ]
    },
    {
      "originalLine": "[ 2LCP30-003-HS: Drucktaste Hebevorrichtung Horde 2N51 nieder",
      "lineNumber": 3606,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+ 2LCP31-003-HS: Drucktaste Hebevorrichtung Horde 2N51 nieder",
      "lineNumber": 3607,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Zeit (Einschaltverzögerung) ]",
      "lineNumber": 3608,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Zeit (Ausschaltverzögerung)",
      "lineNumber": 3609,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": true,
        "hasKeywords": true,
        "potentialType": "cross_reference"
      },
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "suggestedGroup": "cross_reference",
      "confidence": 0.9,
      "reasoning": [
        "Contains parentheses and step keywords, likely cross-reference"
      ]
    },
    {
      "originalLine": "Störung: Hebevorrichtung Horde 2N51 zu hoch (2N51-200-GSM) =",
      "lineNumber": 3610,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": true,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Motorstarter Hydropumpe 2MP151 =",
      "lineNumber": 3612,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "Störung: Laufzeit Fehler Hydropumpe 2MP151=",
      "lineNumber": 3614,
      "analysis": {
        "hasNumbers": true,
        "hasColon": true,
        "hasEquals": true,
        "hasParentheses": false,
        "hasKeywords": true,
        "potentialType": "step"
      },
      "suggestedRegex": "/^(\\w+)\\s+(\\d+)\\s*:\\s*(.*)$/",
      "suggestedGroup": "schritt",
      "confidence": 0.7,
      "reasoning": [
        "Contains colon and number, likely step declaration"
      ]
    },
    {
      "originalLine": "+",
      "lineNumber": 3617,
      "analysis": {
        "hasNumbers": false,
        "hasColon": false,
        "hasEquals": false,
        "hasParentheses": false,
        "hasKeywords": false,
        "potentialType": "condition"
      },
      "suggestedRegex": "/^[+-]\\s*(.*)$/",
      "suggestedGroup": "condition",
      "confidence": 0.6,
      "reasoning": [
        "Starts with +/-, likely condition"
      ]
    }
  ],
  "syntaxRuleUpdates": [
    {
      "group": "cross_reference",
      "suggestedRegex": "/\\(([^)]+)\\s+(SCHRITT|STAP|STEP)\\s+([0-9+]+)\\)/",
      "examples": [
        "Lengte TAB voor STAP kleiner gemaakt (van 8 naar 6 cm)",
        "Horde vorselektiert (Selektionsprogramm Horde für Einfuhr SCHRITT 2+5+8+11)",
        "Füllen Horde aktiv (Füllen Horde N21 SCHRITT 7)"
      ],
      "confidence": 0.9,
      "comment": "Auto-generated from 295 similar patterns"
    }
  ],
  "trainingRecommendations": [
    {
      "type": "unknown_patterns",
      "description": "Found 3336 unknown patterns",
      "suggestion": "Consider expanding syntax rules to handle these patterns"
    }
  ]
}